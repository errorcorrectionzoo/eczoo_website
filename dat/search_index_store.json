{"c_oaecc": {"name": "Operator-algebra error-correcting code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_oaecc", "_href": "c/oaecc"}, "c_ecc": {"name": "Error-correcting code", "description": "Encodes \\(K\\) states (codewords) over an alphabet with \\(N\\) elements such that it is possible to recover the codewords from errors \\(E\\) from some error set \\(\\mathcal{E}\\).", "protection": "An error-correcting code \\((u,\\mathcal{E})\\) is an encoder function \\(u:[1\\cdots K]\\to[1\\cdots N]\\) with a set of correctable errors \\(E:[1\\cdots N]\\to [1\\cdots M]\\) with the following property: there exists a decoder function \\(d:[1\\cdots M]\\to [1\\cdots K]\\) such that for all \\(E\\in\\cal{E}\\) and states \\(x\\in[1\\cdots K]\\), \\(d(E(e(x)))=x\\).", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_ecc", "_href": "c/ecc"}, "c_cyclic": {"name": "Cyclic code", "description": "A classical code \\(C\\) of length \\(n\\) over an alphabet is cyclic if, for each string \\(c_1 c_2 \\cdots c_n\\in C\\), the cyclically shifted string \\(c_n c_1 \\cdots c_{n-1}\\in C\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_cyclic", "_href": "c/cyclic"}, "c_q-ary_digits_into_q-ary_digits": {"name": "\\(q\\)-ary code", "description": "Encodes \\(K\\) states (codewords) in \\(n\\) \\(q\\)-ary coordinates and has distance \\(d\\). Usually denoted as \\((n,K,d)_q\\). The distance is the minimum number of coordinates where two strings in the code differ.", "protection": "Detects errors on up to \\(d-1\\) coordinates, corrects erasure errors on up to \\(d-1\\) coordinates, and corrects general errors on up to \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) coordinates.", "realizations": "", "notes": "Tables of bounds and examples of linear codes for various \\(n\\) and \\(k\\), extending code tables by Brouwer , are maintained by Markus Grassl at this website.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_q-ary_digits_into_q-ary_digits", "_href": "c/q-ary_digits_into_q-ary_digits"}, "c_q-ary_linear": {"name": "\\(q\\)-ary linear code", "description": "An \\((n,K,d)_q\\) linear code is denoted as \\([n,k,d]_q\\), where \\(k=\\log_{q}K\\) need not be an integer. Its codewords form a linear subspace, i.e., for any codewords \\(x,y\\), \\(\\alpha x+ \\beta y\\) is also a codeword for any \\(q\\)-ary digits \\(\\alpha,\\beta\\). Often defined in terms of a generator matrix \\(G\\), whose rows form a basis for the subspace. Given a codeword \\(x\\), the corresponding encoded codeword is \\(G^T x\\).", "protection": "Distance \\(d\\) of a linear code is the number of nonzero entries in the (nonzero) codeword with the smallest such number. Corrects any error set such that the difference of any pair of distinct elements of the set is a codeword.", "realizations": "", "notes": "Admits a parity check matrix \\(H\\), whose columns make up a maximal linearly independent set of vectors that are in the kernel of \\(G\\).", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_q-ary_linear", "_href": "c/q-ary_linear"}, "c_dual": {"name": "Dual linear code", "description": "For any \\(q\\)-ary linear code \\(C\\), the dual code\n\\begin{align}\nC^\\perp = \\{ y\\in\\mathbb{Z}_q^{\\times n} ~|~ x\\cdot y=0 \\forall x\\in C\\}~.\n\\end{align}\nA code that contains its dual, \\(C^\\perp \\subseteq C\\), is called weakly self-dual or self-orthogonal. A code that is equal to its dual, \\(C^\\perp = C\\), is called self-dual. The dual of a dual code is the original code.", "protection": "The dual of an \\([n,k,d] \\) code is an \\([n,n-k,d']\\) code, where \\(d'\\) is not always related to \\(d\\). The generator matrix of \\(C^\\perp\\) is the parity check matrix of \\(C\\), and visa versa.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_dual", "_href": "c/dual"}, "c_perfect": {"name": "Perfect code", "description": "An \\((n,K,2t+1)_q\\) \\(q\\)-ary code is perfect if parameters \\(n\\), \\(K\\), \\(t\\), and \\(q\\) are such that the Hamming (a.k.a. sphere-packing) bound\n\\begin{align}\n\\sum_{j=0}^{t}(q-1)^{j}{n \\choose j}\\leq q^{n}/K\n\\end{align}\nbecomes an equality. For example, for a binary \\(q=2\\) code with one logical bit (\\(K=2\\)) and \\(t=1\\), the bound becomes \\(n+1 \\leq 2^{n-1}\\).\nFor binary codes with \\(K=2^k\\), one can work out an asymptotic Hamming bound in the large-\\(n,k,t\\) limit,\n\\begin{align}\n\\frac{k}{n}\\leq 1-H(t/n),\n\\end{align}\nwhere \\(H\\) is the binary entropy function.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_perfect", "_href": "c/perfect"}, "c_generalized_reed_solomon": {"name": "Generalized Reed-Solomon code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "\n\n", "_type": "ecc", "_page_id": "c_generalized_reed_solomon", "_href": "c/generalized_reed_solomon"}, "c_skew_cyclic": {"name": "Skew-cyclic code", "description": "A classical code \\(C\\) of length \\(n\\) over \\(GF(q)\\) is skew-cyclic if there exists an automorphism, \\(\\theta\\), of \\(GF(q)\\), such that for each string \\(c_1 c_2 \\cdots c_n\\in C\\), the skew-cyclically shifted string \\(\\theta(c_n) \\theta(c_1) \\cdots \\theta(c_{n-1})\\in C\\). We say that \\(C\\) is a \\(\\theta\\)-cyclic code over \\(GF(q)\\).", "protection": "", "realizations": "Not directly implemented, but BCH codes form a subclass, and are used in DVD, solid state drive storage, etc.", "notes": "Computer algebra software is used to find most codes of this type. Ref.  gives several examples of codes, which have slightly improved minimum distance for some \\((n,k)\\) codes.", "feature_decoders": "Only given for skew-BCH codes, adapted froom standard BCH codes.", "parent_detail": "For every skew-cyclic code there is an equivalent quasi-cyclic code .", "cousin_detail": "", "_type": "ecc", "_page_id": "c_skew_cyclic", "_href": "c/skew_cyclic"}, "c_gabidulin": {"name": "Rank code", "description": "Also called Gabidulin or (matrix) rank-metric code. The code corrects errors over rank metric instead of the traditional Hamming distance. The rank of an \\(n\\)-dimensional vector over \\(GF(q^N)\\) is the maximum number of its linearly independent coordinates.\nGiven \\(X^n\\), an \\(n\\)-dimensional vector space over \\(GF(q^N)\\) where \\(q\\) is a power of a prime number, the rank metric \\(d(x, y)\\) is defined via the rank norm \\(r(x, q) = \\mathrm{rank}(A(x))\\), where\n\\begin{align}\nA(x) = \\begin{pmatrix} a_{11} & a_{12} & \\ldots & a_{1n} \\\\ a_{21} & a_{22} & \\ldots & a_{2n} \\\\  a_{N1} & a_{N2} & \\ldots & a_{Nn} \\end{pmatrix}\n\\end{align}\nand \\(x_i = a_{1i} u_1 + a_{2i} u_2 + \\ldots + a_{Ni}u_N \\) for some fixed basis \\(\\{u_i\\}_{i=1}^N\\).\nIf the vector set \\(\\{x_1, x_2, \\ldots, x_M\\}\\) defines a \\(k\\)-dimensional subspace, then the code is \\([n,k]\\)-linear.", "protection": "Set of vectors \\(\\{x_1, x_2, \\ldots, x_M\\}\\) determines a rank code with distance \\(d=\\min d(x_i, x_j)\\). The code with distance \\(d\\) corrects all errors with rank of the error not greater than \\(\\lfloor (d-1)/2\\rfloor\\).", "realizations": "Useful for error and erasure correction in network coding", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_gabidulin", "_href": "c/gabidulin"}, "c_quasi_cyclic": {"name": "Quasi-cyclic code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_quasi_cyclic", "_href": "c/quasi_cyclic"}, "c_goppa": {"name": "Goppa code", "description": "Let \\( G(z) \\)  be a polynomial describing a projective plane curve with coefficients from \\( GF(q^m) \\) for some fixed integer \\(m\\). Let \\( L \\) be a finite subset of the extension field \\( GF(q^m) \\)  where \\(q\\) is prime, meaning \\( L  = \\{\\alpha_1, \\cdots, \\alpha_n\\} \\) is a subset of nonzero elements of \\( GF(q^m) \\). A Goppa code \\( \\Gamma(L,G) \\) is an \\([n,k,d]\\) linear code consisting of all vectors \\(a = a_1, \\cdots, a_n\\) such that \\( R_a(z) =0 \\) modulo \\(G(z)\\), where \\( R_a(z) = \\sum_{i=1}^n \\frac{a_i}{z - \\alpha_i} \\).", "protection": "The length \\( n = |L| \\) , dimension \\( k \\geq n-mr \\) where \\( r = \\text{deg} G(z) \\), and the minimum distance \\( d \\geq r +1 \\).", "realizations": "The binary version \\( (q=2) \\) is commonly used in post-quantum cryptosystems such as the McElise cryptosystem .", "notes": "GAP function GoppaCode(G,L) takes in a polynomial \\(G\\) that satisfies the necessary conditions for a Goppa code and a list \\(L\\) that contains elements in \\(GF(q)\\) that are not roots of \\(G\\). It returns a Goppa code.", "feature_rate": "There exist Goppa codes defined over larger alphabets that meet the Gilbert-Varshamov, or GV,  bound.", "feature_decoders": "Algebraic decoding algorithms .\n\nIf \\( \\text{deg} G(z) = 2t \\) , then there exists a \\(t\\)-correcting algebraic decoding algorithm for \\( \\Gamma(L,G) \\).", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_goppa", "_href": "c/goppa"}, "c_group": {"name": "Group code", "description": "An \\( [n,k]_{q} \\) code based on a finite group \\( G \\) of size \\(n \\). A group code for an abelian group is called an abelian group code.\nThe code is a \\( k \\)-dimensional linear subspace of the group algebra of \\( G\\) with coefficients in the field \\(GF(q) = \\mathbb{F}_q\\) with \\(q\\) elements. To be precise, the code must be closed under permutations corresponding to the elements of the group \\( G \\); therefore, \\( G \\) must be a subgroup of the permutation automorphism group of the code, which is defined as the group of permutations of the physical bits that preserve the code space. This leads us to the formal definition of a group code: a group code is an ideal in the group algebra \\( \\mathbb{F}_q G \\).", "protection": "", "realizations": "", "notes": "See Ch. 16 of Ref.  for an introduction to group codes.\n\nNot all abelian group codes are for cyclic groups (cyclic codes) or for elementary abelian \\( p \\) groups (e.g. Reed Muller codes ). For example, there is a binary code with parameters \\( [45,13,16] \\) which is an abelian group code for the group \\( G = \\mathbb{Z}_3 \\times \\mathbb{Z}_{15} \\).", "parent_detail": "", "cousin_detail": "A length-\\(n\\) cyclic code is an abelian group code for the cyclic group with \\(n\\) elements \\( \\mathbb{Z}_n \\).\n\nConsider a binary vector space of dimension \\( m \\). Under addition, this forms a finite group with \\( 2^m \\) elements known as an elementary abelian 2-group -- the direct product of \\( m \\) two-element cyclic groups \\( \\mathbb{Z}_2 \\times \\dots \\times \\mathbb{Z}_2 \\). Denote this group by \\( G_m \\). Let \\( J \\) be the Jacobson radical of the group algebra \\( \\mathbb{F}_2 G_m \\). Then, the binary Reed-Muller codes \\( \\text{RM}(r,m) \\) correspond to the ideal \\( J^{m-r} \\). The length of the code is \\( |G_m| = 2^m \\), the distance is \\( 2^{m-r} \\), and the dimension is \\( \\sum_{i=0}^r {m \\choose i} \\). A similar construction exists for choices of a prime \\( p\\neq 2 \\).\n\n", "_type": "ecc", "_page_id": "c_group", "_href": "c/group"}, "c_maximum_rank_distance": {"name": "Maximum-rank code", "description": "Linear rank-metric code with maximum rank \\([n,k,n-k+1]_q\\) over rank metric. For any vector \\(g=(g_1, \\ldots, g_n)\\) with linearly independent elements \\(g_i\\) over \\(GF(q)\\),\nthe generator matrix\n\\begin{align}\nG = \\begin{pmatrix} g_1^{[0]} & g_2^{[0]} & \\ldots & g_n^{[0]} \\\\ g_1^{[1]} & g_2^{[1]} & \\ldots & g_n^{[1]} \\\\ g_1^{[k-1]} & g_2^{[k-1]} & \\ldots & g_n^{[k-1]} \\end{pmatrix}~,\n\\end{align}\nwhere \\([i]:=q^i\\) and \\(k=n-d+1\\) defines a maximum rank distance code.", "protection": "\\(d\\)-distance codes protect agains all errors of rank not greater \\(\\lfloor (d-1)/2\\rfloor\\)", "realizations": "", "notes": "", "parent_detail": "Linear rank codes with maximum rank.", "cousin_detail": "The construction of the generators matrix of both codes uses a Vandermonde matrix.", "_type": "ecc", "_page_id": "c_maximum_rank_distance", "_href": "c/maximum_rank_distance"}, "c_mds": {"name": "Maximum distance separable (MDS) code", "description": "A \\([n,k,d]_q\\) \\(q\\)-ary linear code is an MDS code if parameters \\(n\\), \\(k\\), \\(d\\), and \\(q\\) are such that the Singleton bound\n\\begin{align}\nd \\leq n-k+1\n\\end{align}\nbecomes an equality. A bound for general \\(q\\)-ary codes can also be formulated; see Thm. 1.9.10 in Ref. .", "protection": "Given \\(n\\) and \\(k\\), MDS codes have the highest distance possible of all codes and so have the best possible error correction properties.", "realizations": "", "notes": "The dual of an MDS codes is always MDS.\n\nThe codes \\( [[n,1,n]]_q, [[n,n-1,2]]_q, [[n,n,1]]_q \\) for any \\(q\\) are MDS codes. These are called the trivial MDS codes.\n\nThe only binary MDS codes are the trivial ones.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_mds", "_href": "c/mds"}, "c_reed_solomon": {"name": "Reed-Solomon code", "description": "An \\([n,k,n-k+1]_q\\) linear code based on polynomials over \\(GF(q)\\). Let \\(\\{\\alpha_1,\\cdots,\\alpha_n\\}\\) be \\(n\\) distinct nonzero elements of \\(GF(q)\\) with \\(q>n\\). Encodes \\(\\mu=\\{\\mu_0,\\cdots,\\mu_{k-1}\\}\\) into \\(\\{f_\\mu(\\alpha_1),\\cdots,f_\\mu(\\alpha_n)\\}\\), with polynomial\n\\begin{align}\nf_\\mu(x)=\\mu_0+\\mu_1 x + \\cdots + \\mu_{k-1}x^{k-1}.\n\\end{align}", "protection": "Corrects erasures on \\(n-k\\) coordinates.", "realizations": "Numerous applications: computer hard-disks, DVDs, 3G telephone networks (IS-2000, Release D), NASA deep-space exploration, etc.", "notes": "", "parent_detail": "", "cousin_detail": "\n\nEvery Reed Solomon code is MDS. If \\(k \\leq p\\) then all MDS codes \\( [n,k,n-k+1]_{p^m} \\) are Reed-Solomon codes .", "_type": "ecc", "_page_id": "c_reed_solomon", "_href": "c/reed_solomon"}, "c_generalized_concatenated": {"name": "Generalized concatenated classical code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_generalized_concatenated", "_href": "c/generalized_concatenated"}, "c_alternant": {"name": "Alternant code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_alternant", "_href": "c/alternant"}, "c_convolutional": {"name": "Convolutional code", "description": "Classical codes that are formed using generator polynomials over the finite field with two elements. The encoder slides across contiguous subsets of the input bit-string (like a convolutional neural network) evaluating the polynomials on that window to obtain a number of parity bits. These parity bits are the encoded information. There are many ways to formulate these codes", "protection": "", "realizations": "A type of convolutional code used in Real-time Applcation networks .\n\nMobile and radio communications (3G networks) use convolutional codes concatenated with Reed-Solomon codes to obtain suitable performance .\n\nA convolutional code with rate 1/2 was used for deep-space and satellite communication", "notes": "", "feature_rate": "Depends on the polynomials used. Using puncturing removal  the rate for the code can be increased from \\(\\frac{1}{t}\\) to \\(\\frac{s}{t}\\), where \\(t\\) is the number of output bits, and \\(s\\) depends on the puncturing done. This is done by deleting some pieces of the encoder output such that the most-likely decoders remain effective", "feature_encoders": "Evaluation on the generator polynomials. Can be implemented with a small number of XOR gates", "feature_decoders": "Decoders based on the Viterbi algorithm (trellis decoding) were developed first, which result in the most-likely codeword for the encoded bits . Following, other trellis decoders such as the BCJR decoding algorithm  were developed later.", "parent_detail": "", "cousin_detail": "Quantum analogue of convolutional codes\n\nConvolutional codes are often used in concatenation with Reed-Solomon codes for communication .", "_type": "ecc", "_page_id": "c_convolutional", "_href": "c/convolutional"}, "c_hadamard": {"name": "Hadamard code", "description": "The Hadamard code is dual to the extended Hamming Code.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "The Hadamard code is the dual of the extended Hamming Code.\n\nThe Hadamard code is the dual of the extended Hamming Code. Conversely, the shortened Hadamard code is the dual of the Hamming Code.\n\nFor any Hamming code \\([2^m,2^m-m-1,3]\\), the dual Hadamard code, when augmented with a bit that is always 0, gives the \\(R(1,m)\\) 1st order Reed-Muller code. In general, \\(R(1,m)\\) is related to the duals of the Hamming code, and when \\(R(1,m)\\) is self dual, it is directly related to the Hamming code.", "_type": "ecc", "_page_id": "c_hadamard", "_href": "c/hadamard"}, "c_single_parity_check": {"name": "Single parity-check code", "description": "An \\([n,n-1,2]\\) binary linear error-detecting code encoding an \\(n\\)-bit codeword into an \\((n+1)\\)-bit string. In this code, parity information of a codeword is sotred in an extra parity bit. If the Hamming weight of a codeword is odd, then its parity is 1. If the Hamming weight of a codeword is even, then its parity is 0. This code is inexpensive since it only requires an extra parity bit and a single parity check.", "protection": "This code cannot protect information, it can only detect 1-bit error.", "realizations": "Can be realized on almost every communication device.", "notes": "", "feature_rate": "The code rate is \\(\\frac{n}{n+1}\\to 1\\) as \\(n\\to\\infty\\). The code distance is 2.", "feature_encoders": "Concatenate the codeword with a parity bit which encodes the parity information of codeword.", "feature_decoders": "If the receiver finds that the parity information of a codeword disagrees with the parity bit, then the receiver will discard the information and request a resend.", "parent_detail": "", "cousin_detail": "Repetition code is dual to the single-parity check code.", "_type": "ecc", "_page_id": "c_single_parity_check", "_href": "c/single_parity_check"}, "c_tanner": {"name": "Tanner code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_tanner", "_href": "c/tanner"}, "c_polar": {"name": "Polar code", "description": "In its basic version, a binary linear polar code encodes \\(K\\) message bits into \\(N=2^n\\) bits. The linear transformation that defines the code is given by the matrix \\(G^{(n)}=B_N G^{\\otimes n}\\), where \\(B_N\\) is a certain \\(N\\times N\\) permutation matrix, and \\(G^{\\otimes n}\\) is the \\(n\\)th Kronecker power of the \\(2\\times 2\\) kernel matrix \\(G=\\left[\\begin{smallmatrix}1 & 0\\\\ 1 & 1 \\end{smallmatrix}\\right]\\). To encode \\(K\\) message bits, one forms an \\(N\\)-vector \\(u\\) in which \\(K\\) coordinates represent the message bits. The remaining \\(N-K\\) coordinates are set to some fixed values and are said to be frozen. The codeword \\(x \\in \\{0,1\\}^N\\) is obtained as \\(x=u G^{\\otimes n}\\). The choice of the frozen coordinates depends on the communication channel, and they correspond to the least reliable bits on the output of the channel under a particular decoding procedure called successive cancellation decoding. If the communication channel is input-symmetric, the values of the frozen bits can be set to zero.", "protection": "Protects against various types of noise in the communication channel, for instance, errors, erasures, or other types of noise. Distance plays no role in the analysis of its properties, and is much lower than the largest possible value given \\(K,N\\).", "realizations": "Code control channels for the 5G NR (New Radio) interfaces.", "notes": "There are multiple variants of the basic construction, in particular relying on other kernel matrices. The codes can be defined for nonbinary alphabets, and they can be adjusted to support tasks such as lossless and lossy compression, successive refinement, communication over the mulitple access channel, communication over the wiretap channel, and many others.\n\nDescribed in Ch. 32 of Ref. .", "feature_rate": "Supports reliable transmission at rates \\(K/N\\) approaching the Shannon capacity of the channel.", "feature_decoders": "Successive cancellation decoder .\n\nSuccessive cancellation list decoder .", "feature_threshold": "Achieves Shannon capacity of the binary-input memoryless channel under successive cancellation decoder .", "parent_detail": "", "cousin_detail": "Reed-Muller code relies on the same generator matrix, but places message bits in different coordinates.\n\nPolar codes can be represented as generalized concatenations of their kernels.", "_type": "ecc", "_page_id": "c_polar", "_href": "c/polar"}, "c_repetition": {"name": "Binary repetition code", "description": "\\([n,1,n]\\) binary linear code encoding one bit of information into an \\(n\\)-bit string. The length \\(n\\) needs to be an odd number, since the receiver will pick the majority to recover the information. The idea is to increase the code distance by repeating the logical information several times. It is a \\((n,1)\\)-Hamming code.", "protection": "Detects errors on up to \\(\\frac{n-1}{2}\\) coordinates, corrects erasure errors on up to \\(\\frac{n-1}{2}\\) coordinates. The generator matrix is \\(G=\\left[\\begin{smallmatrix}1 & 1&\\cdots& 1 & 1 \\end{smallmatrix}\\right]\\).", "realizations": "Repetition codes were used in magnetic disks.\n\nAlthough classical repetition code does not have many real-world applications, it still inspire the studies of quantum error correction. Quantum repetition code is widely studied in quantum computing community.", "notes": "", "feature_rate": "Code rate is \\(\\frac{1}{n}\\), code distance is \\(n\\).", "feature_decoders": "Calculate the Hamming weight \\(d_H\\) of the code. If \\(d_H\\leq \\frac{n-1}{2}\\), decode the code as 0. If \\(d_H\\geq \\frac{n+1}{2}\\), decode the code as 1.", "feature_threshold": "Suppose each bit has probability \\(p\\) of being received correctly, independent for each bit. The probability that a repetition code is received correctly is \\(\\sum_{k=0}^{(n-1)/2}\\frac{n!}{k!(n-k)!}p^{n-k}(1-p)^{k}\\). If \\(\\frac{1}{2}\\leq p\\), then people can always increase the probability of success by increasing the number of physical bit \\(n\\).", "parent_detail": "A \\([n,1,n]\\) repetition code is an \\((n,1)\\) Hamming code.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_repetition", "_href": "c/repetition"}, "c_binary_linear": {"name": "Binary linear code", "description": "An \\((n,2^k,d)\\) linear code is denoted as \\([n,k,d]\\). Its codewords form a linear subspace, i.e., for any codewords \\(x,y\\), \\(x+y\\) is also a codeword. Often defined in terms of a generator matrix \\(G\\), whose rows form a basis for the subspace. Given a codeword \\(x\\), the corresponding encoded codeword is \\(G^T x\\).", "protection": "Distance \\(d\\) of a linear code is the number of nonzero entries in the (nonzero) codeword with the smallest such number. Corrects any error set for which no two elements of the set add up to a codeword. Linear codes admit a parity check matrix \\(H\\), whose columns make up a maximal linearly independent set of vectors that are in the kernel of \\(G\\).", "realizations": "", "notes": "Tables of bounds and examples of linear codes for various \\(n\\) and \\(k\\), extending code tables by Brouwer , are maintained by Markus Grassl at this website.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_binary_linear", "_href": "c/binary_linear"}, "c_parity_check": {"name": "Parity-check code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_parity_check", "_href": "c/parity_check"}, "c_hamming": {"name": "Hamming code", "description": "Hamming codes are a family of linear codes with parameters \\((2^r-1,2^r-r-1, 3)\\) for any \\(r\\). The \\(r \\times (2^r-1) \\) parity check matrix, \\(H\\), has all possible non-zero r-bit strings as its columns. The codewords are \\({x|Hx=0}\\).", "protection": "Can detect 1-bit and 2-bit errors, and can correct 1-bit errors", "realizations": "Commonly used when error rates are very low, for example, computer RAM.", "notes": "Has the maximum rate among binary codes for that block length and with minimum distance 3. Therefore, it is a perfect code, i.e, it saturates the Hamming Bound.", "feature_rate": "\\(1-\\frac{\\log n}{n}\\)", "parent_detail": "", "cousin_detail": "\n\n", "_type": "ecc", "_page_id": "c_hamming", "_href": "c/hamming"}, "c_ldpc": {"name": "Low-density parity-check (LDPC) code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_ldpc", "_href": "c/ldpc"}, "c_bch": {"name": "Bose\u2013Chaudhuri\u2013Hocquenghem (BCH) code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "\n\n", "_type": "ecc", "_page_id": "c_bch", "_href": "c/bch"}, "c_homological_classical": {"name": "Graph homology code", "description": "This code's properties are derived from the size two chain complex associated with a particular graph. Given a connected simplicial (no self loops or muliedges) graph \\(G = (V, E)\\), which is not a tree, with incidence matrix \\(\\Gamma\\) we can construct a code by choosing a parity check matrix which consists of all the linearly independent rows of \\(\\Gamma\\). This is a \\([n,k,d]\\) code with \\(n = |E|\\), \\(k = 1 - \\mathcal{X}(G) = 1-|V|+|E|\\), where \\( \\mathcal{X}(G)\\) is the euler characteristic of the graph. The code distance is equal to the shortest size of a cycle, guaranteed to exist since \\(G\\) is not a tree.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "A family of homology codes saturate the asymptotic Hamming bound .\n\nCSS codes can also be constructed using homology techniques but for manifolds of dimension two or greater.", "_type": "ecc", "_page_id": "c_homological_classical", "_href": "c/homological_classical"}, "c_reed_muller": {"name": "Reed-Muller code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_reed_muller", "_href": "c/reed_muller"}, "c_expander": {"name": "Expander code", "description": "Expander codes are binary linear codes whose parity check matrices are derived from the adjacency matrix of bipartite expander graphs. In particular, the rows of the parity check matrix correspond to the right nodes of the bipartite graph and the columns correspond to the left nodes. The codespace is equivalent to all subsets of the left nodes in the graph that have an even number of edges going into every right node of the graph. Since the expander graph is only left regular, these codes do not qualify as LDPC codes.\nExpander codes are important because they admit efficient encoding and decoding algorithms and have the desirable property that their rate and relative distance are constant. The rate and distance of the expander code depend on specific parameters of the corresponding graph. A (\\(n, m, D, \\gamma, \\alpha\\)) bipartite expander graph is defined as a \\(D\\)-left-regular graph with \\(n\\) left nodes, and \\(m\\) right nodes such that for any subset of left nodes \\(S\\) of size at most \\(\\gamma n\\) the neighborhood \\(N(S)\\) is at least of size \\(\\alpha|S|\\). Given a (\\(n, m, D, \\gamma, (1-\\epsilon)D\\)) expander graph, the corresponding expander code has rate of \\(1 - m/n\\) and a distance of at least \\(2(1-\\epsilon)\\gamma n\\) for any \\(\\epsilon < 1/2\\). Explicit constructions for expander graphs with any ratio \\(n/m\\) are known where \\(D = \\text{polylog}(n/m)\\), \\(\\gamma = \\Omega(1/D)\\) and arbitrary \\(\\epsilon\\) .", "protection": "Bit flip errors of weight at most \\((d-1)/2\\) where \\(d\\) is the distance of the code and is linear in \\(n\\), the number of physical bits.", "realizations": "", "notes": "", "feature_rate": "The rate is \\(1 - m/n\\) where \\(n\\) is the number of left nodes and \\(m\\) is the number of right nodes in the bipartite expander graph.", "feature_encoders": "Multiplication by generator matrix with runtime \\(O(n^2)\\)", "feature_decoders": "Decoding can be done in \\(O(n)\\) runtime using a greedy algorithm. The algorithm consists of flipping a bit of the received word if it will result in a greater number of satisfied parity checks. This is repeated until a codeword is reached.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_expander", "_href": "c/expander"}, "c_bits_into_bits": {"name": "Binary code", "description": "Encodes \\(K\\) states (codewords) in \\(n\\) binary coordinates and has distance \\(d\\). Usually denoted as \\((n,K,d)\\). The distance is the minimum Hamming distance between a pair of distinct codewords.", "protection": "Detects errors on up to \\(d-1\\) coordinates, corrects erasure errors on up to \\(d-1\\) coordinates, and corrects general errors on up to \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) coordinates.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_bits_into_bits", "_href": "c/bits_into_bits"}, "c_oecc": {"name": "Subsystem code", "description": "Also called an operator error-correcting code. Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_oecc", "_href": "c/oecc"}, "c_qecc_finite": {"name": "Finite-dimensional quantum code", "description": "A quantum error-correcting code that encodes quantum information in a \\(K\\)-dimensional (logical) subspace \\(\\mathsf{H}_K\\) of an \\(N\\)-dimensional (physical) Hilbert space \\(\\mathsf{H}_N\\) such that it is possible to recover said information from errors.", "protection": "Formally, a finite-dimensional quantum code \\((U,\\cal{E})\\) is a partial isometry \\(U:\\mathsf{H}_{K}\\to\\mathsf{H}_{N}\\) with a set of correctable errors \\({\\cal{E}}:\\mathsf{H}_N\\to\\mathsf{H}_M\\) with the following property: there exists a quantum operation \\({\\cal{D}}:\\mathsf{H}_M\\to \\mathsf{H}_K\\) such that for all \\(E\\in\\cal{E}\\) and states \\(|\\psi\\rangle\\in\\mathsf{H}_{K}\\),\n\\begin{align}\n{\\cal D}(EU|\\psi\\rangle\\langle\\psi|U^{\\dagger}E^{\\dagger})=c(E,|\\psi\\rangle)|\\psi\\rangle\\langle\\psi|\\end{align}\nfor some constant \\(c\\).\nEquivalently, correction capability is determined by the Knill-Laflamme error correction criteria . A code that satisfies these conditions approximately, i.e., up to some small quantifiable error, is called an approximate code.", "realizations": "", "notes": "", "feature_general_gates": "Universal gate set cannot be transversal due to Eastin-Knill theorem .", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_qecc_finite", "_href": "c/qecc_finite"}, "c_qecc": {"name": "Quantum error-correcting code (QECC)", "description": "Encodes quantum information in a (logical) subspace of a (physical) Hilbert space such that it is possible to recover said information from errors that act as linear maps on the physical space. The logical subspace is spanned by a basis comprised of code basis states or codewords. Codewords may not be normalizable if the physical Hilbert space in infinite, so approximate versions have to be constructed.", "protection": "Denoting Hilbert spaces by the letter \\(\\mathsf{H}\\), a quantum code \\((U,\\cal{E})\\) is a partial isometry \\(U:\\mathsf{H}_{\\text{logical}}\\to\\mathsf{H}_{\\text{physical}}\\) with a set of correctable errors \\(\\cal{E}\\) with the following property: there exists a quantum operation \\(\\cal{D}\\) such that for all \\(E\\in\\cal{E}\\) and states \\(|\\psi\\rangle\\in\\mathsf{H}_{\\text{logical}}\\),\n\\begin{align}\n{\\cal D} (EU|\\psi\\rangle\\langle\\psi|U^{\\dagger}E^{\\dagger})=c(E,|\\psi\\rangle)|\\psi\\rangle\\langle\\psi|\n\\end{align}\nfor some constant \\(c\\).\nEquivalently, correction capability is determined by of the Knill-Laflamme error-correction criteria , which may admit infinite terms due to non-normalizability of ideal code states. A code that satisfies these conditions approximately, i.e., up to some small quantifiable error, is called an approximate code.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_qecc", "_href": "c/qecc"}, "c_quantum_convolutional": {"name": "Quantum convolutional code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_quantum_convolutional", "_href": "c/quantum_convolutional"}, "c_color": {"name": "Color code", "description": "A family of abelian topological CSS stabilizer codes defined on a \\(D\\)-dimensional lattice which satisfies two properties: The lattice is (1) a homogeneous simplicial \\(D\\)-complex obtained as a triangulation of the interior of a \\(D\\)-simplex and (2) is \\(D+1\\)-colorable. Qubits are placed on the \\(D\\)-simplices and generators are supported on suitable simplices . For 2-dimensional color code, the lattice must be such that it is 3-valent and has 3-colorable faces, such as a honeycomb lattice. The qubits are placed on the vertices and two stabilizer generators are placed on each face .", "protection": "As with the surface code, the code distance depends on the specific kind of lattice used to define the code. More precisely, the distance depends on the homology of logical string operators .", "realizations": "", "notes": "", "feature_rate": "For general 2D manifolds, \\(kd^2 \\leq c(\\log k)^2 n\\) for some constant \\(c\\) , meaning that color codes with finite rate can only achieve an asymptotic minimum distance that is logarithmic in \\(n\\).", "feature_transversal_gates": "Transversal CNOT can be implemented via braiding . Universal transversal gates can be achieved in 3D color code using gauge fixing , lattice surgery , or code deformation .", "feature_general_gates": "Magic-state distillation protocols .\n\nNon-clifford gates can be implemented via code switching .", "feature_decoders": "Projection decoder .\n\nMatching decoder gives low logical failure rate .\n\nInteger-program-based decoder .\n\nRestriction decoder .", "feature_fault_tolerance": "Clifford gates can be performed fault-tolerantly on a suitable 2D lattice .\n\nSyndrome measurement .\n\nSteane's ancilla-coupled measurement method", "feature_code_capacity_threshold": "\\(\\geq 6\\%\\) threshold with rescaling-based decoder .", "feature_threshold": "\\(\\geq 6.25\\%\\) threshold for 2d color codes with error-free syndrome extraction, and \\(0.1\\%\\) with faulty syndrome extraction .\n\n\\(0.46\\%\\) for 3d codes with clustering decoder .\n\n\\(1.9\\%\\) for 1D string-like logical operators and \\(27.6\\%\\) for 2D sheet-like operators for 3D codes with noise models using optimal decoding and perfect measurements .\n\n\\(0.31\\%\\) noise threshold error rate for gauge code using clustering decoder .\n\n\\(0.143\\%\\) with depolarising circuit-level noise using perfect-matching decoder .\n\n\\(>0\\%\\) threshold with sweep decoder .", "parent_detail": "\n\nWhen treated as ground states of the code Hamiltonian, 2D color code states realize \\(\\mathbb{Z}_2\\times\\mathbb{Z}_2\\) topological order .", "cousin_detail": "Color code is equivalent to surface code in several ways . For example, the color code on a \\(D\\)-dimensional closed manifold is equivalent to multiple decoupled copies of the \\(D-1\\)-dimensional surface code.", "_type": "ecc", "_page_id": "c_color", "_href": "c/color"}, "c_haar_random": {"name": "Haar-random code", "description": "Haar-random codewords are generated in a process involving averaging over unitary operations distributed accoding to the Haar measure. Random codes are used to prove statements about the capacity of a quantum channel to transmit quantum information , but encoding and decoding in random \\(n\\)-qubit codes quickly becomes impractical as \\(n\\to\\infty\\).\nThere are different approaches to create random codewords. In the construction of Ref. , random codewords are produced by performing a unitarily covariant projective measurement on a typical subspace of a tensor-power state. Reference  showed that the capacity of a noisy quantum channel can be achieved by encoding in such Haar-random codes. In particular, random codes achieve perfect transmission in the \\(n\\to\\infty\\)) limit by proving that the encoded information becomes decoupled from the environment. This is a necessary and sufficient condition for successful decoding since measurements of the environment should never reveal the encoded information .\nIntuitively, coupling with the environment can be decreased by projecting the system onto a random codespace. The more qubits that are randomly discarded, the more the codespace is decoupled from the environment. One may ask what is the least amount of qubits that can be discarded, i.e. the largest remaining codespace, that still achieves decoupling. It can be shown through the decoupling inequality  that the largest possible dimension of the random codespace that achieves arbitrarily large decoupling is exponential in the coherent information of the channel. Therefore, there exist codes that can transmit information with rate equal to the coherent information. Furthermore, these codes can be constructed with high probability by performing a Haar-random isometry embedding a \\(k\\)-dimensional logical subspace into an \\(n\\)-dimensional physical space, where \\(k/n\\) is equal to the coherent information. Such an isometry can be produced by QR decomposition of a Gaussian random matrix .", "protection": "Random code achieve the capacity of any noisy quantum channel.", "realizations": "", "notes": "", "feature_rate": "The rate of the code is equal to the coherent information of the channel (i.e. the quantum channel capacity).", "parent_detail": "", "cousin_detail": "Approximating the random projections through \\(t\\)-designs is necessary in order to make the protocol practical. Replacing with random Clifford gates is especially convenient since the Clifford group forms a unitary 2-design and produces stabilizer codes.", "_type": "ecc", "_page_id": "c_haar_random", "_href": "c/haar_random"}, "c_eth": {"name": "Eigenstate thermalization hypothesis (ETH) code", "description": "Also called a thermodynamic code . An \\(n\\)-qubit approximate code whose codespace is formed by eigenstates of a translationally-invariant quantum many-body system which satisfies the Eigenstate Thermalization Hypothesis (ETH). ETH ensures that codewords cannot be locally distinguished in the thermodynamic limit. Relevant many-body systems include 1D non-interacting spin chains, Motzkin chains, or Heisenberg models.\nETH requires that for ordered energy eigenstates \\(|E_l\\rangle\\) and any local observable \\(O\\),\n\\begin{align}\n|\\langle E_l|O|E_l\\rangle-\\langle E_{l+1}|O|E_{l+1}\\rangle|\\leq\\exp(-cn)\n\\end{align}\nfor a constant \\(c\\). This implies that energy eigenstates around some energy \\(\\bar E\\) are approximately locally indistinguishable from one another, as their reduced density matrices on any subsystem are both approximately thermal at energy \\(\\bar E\\). In this way, global information is protected from local measurements by the environment as \\(n\\to\\infty\\).", "protection": "Approximately protects against erasure errors at known locations. Translation invariance alone is sufficient for good approximate error-correcting properties in a many-body spectrum, including in integrable models . The ETH code generated from the spectrum of the translation-invariant 1D Heisenberg spin chain  has recovery infidelity (against the erasure of a constant number of sites) scale as \\(\\epsilon_\\text{worst}=O(1/n)\\) .", "realizations": "", "notes": "", "feature_decoders": "An explicit universal recovery channel for the ETH code is given in .", "parent_detail": "ETH codewords are eigenstates of a local Hamiltonian whose eigenstates satisfy ETH.\n\nETH codes approximately protect against erasures in the thermodynamic limit.", "cousin_detail": "ETH codewords, like topological codewords, are locally indistinguishable.", "_type": "ecc", "_page_id": "c_eth", "_href": "c/eth"}, "c_haah_cubic": {"name": "Haah cubic code", "description": "Class of stabilizer codes on a length-\\(L\\) cubic lattice with one or two qubits per site. We also require that the stabilizer group \\(\\mathsf{S}\\) is translation invariant and generated by two types of operators with support on a cube. In the non-CSS case, these two are related by spatial inversion. For CSS codes, we require that the product of all corner operators is the identity. We lastly require that there are no non-trival ''string operators'', meaning that single-site operators are a phase, and any period one logical operator \\(l \\in \\mathsf{S}^{\\perp}\\) is just a phase. Haah showed in his original construction that there is exactly one non-CSS code of this form, and 17 CSS codes . The non-CSS code is labeled code 0, and the rest are numbered from 1 - 17. Codes 1-4 do not have string logical operators, while codes 11-17 do.\nStraightforward generalizations of the above codes exist to modular qudits, oscillators, and rotors .", "protection": "Cubic codes protect against simultaneous independent Pauli errors on different sites (not qubits, since there can be 2 qubits per site). Codes 0-4 are known to have distance \\(d \\ge L\\), meaning they can achieve macroscopic code distance as \\(L\\to\\infty\\).", "realizations": "Numerical simulations showed that \\(T_{\\rm{mem}}(\\beta) \\ge e^{c \\beta^2/12}\\), suggesting the possibility of macroscopically feasible memory times .", "notes": "", "feature_threshold": "The encoding rate depends on the code implemented, but code 0 has been shown to have \\(k \\ge L\\) (on a periodic finite cubic lattice of side length \\(L\\). In general we expect the number of logical bits to scale as \\(k \\sim L\\).", "parent_detail": "Haah cubic codes are the first examples of Type-II fracton phases .", "cousin_detail": "The color code is another 3D code that does admit string-like operators.\n\nThe energy of any partial implementation of code 1 is proportional to the boundary length similar to the 4D toric code, which can potentially surpress the effects of thermal errors, but it is currently an open problem.", "_type": "ecc", "_page_id": "c_haah_cubic", "_href": "c/haah_cubic"}, "c_stabilizer": {"name": "Stabilizer code", "description": "An \\(((n,2^k,d))\\) stabilizer code is denoted as \\([[n,k]]\\) or \\([[n,k,d]]\\), where \\(d\\) is the code''s distance. Logical subspace is the joint \\(+1\\) eigenspace of a set of \\(2^{n-k}\\) commuting Pauli operators \\(S\\) forming the code''s stabilizer group \\(\\mathsf{S}\\), which cannot contain \\(-I\\). The distance is the minimum weight of a Pauli string that implements a nontrivial logical operation on the code. The code can be represented by a \\((n-k) \\times 2n\\) stabilizer generator matrix \\(H=(H_X|H_Z)\\), where each row \\((h_X|h_Z)\\) is the binary symplectic representation of a stabilizer generator.", "protection": "Detects errors on up to \\(d-1\\) qubits, and corrects erasure errors on up to \\(d-1\\) qubits. More generally, define the normalizer \\(\\mathsf{N(S)}\\) of \\(\\mathsf{S}\\) to be the set of all operators that commute with all \\(S\\in\\mathsf{S}\\). A stabilizer code can correct a Pauli error set \\({\\mathcal{E}}\\) if and only if \\(E^\\dagger F \\notin \\mathsf{N(S)}\\setminus \\mathsf{S}\\) for all \\(E,F \\in {\\mathcal{E}}\\).", "realizations": "", "notes": "Tables of bounds and examples of stabilizer codes for various \\(n\\) and \\(k\\), based on algorithms developed in Ref. , are maintained by Markus Grassl at this website.", "feature_encoders": "Dissipative preparation, for which codespace is steady-state space of a Lindbladian .", "feature_decoders": "Errors are corrected based on the results of stabilizer measurements. For few-qubit codes, all stabilizer measurements can be placed in a lookup table. For infinite code families, the size of such a table scales exponentially with \\(n\\), so algorithms determing the most likely error given a syndrome have to be used.", "feature_fault_tolerance": "Shor error correction .\n\nKnill error correction .", "feature_threshold": "For correlated Pauli noise, bounds can be obtained by mapping the effect of noise on the code to a statistical mechanical model .", "parent_detail": "If the CWS set \\( \\mathcal{W} \\) is an abelian group not containing \\(-I\\), then the CWS code is a stabilizer code.", "cousin_detail": "Qubit stabilizer codes are quantum analogues of binary linear codes.\n\nCodespace is the ground-state space of the code Hamiltonian, consisting of an equal linear combination of stabilizer generators.\n\nModular-qudit stabilizer codes for prime-dimensional qudits \\(q=p\\) inherit most of the features of qubit stabilizer codes, including encoding an integer number of qudits and a Pauli group with a unique number of generators.", "_type": "ecc", "_page_id": "c_stabilizer", "_href": "c/stabilizer"}, "c_subsystem_stabilizer": {"name": "Subsystem stabilizer code", "description": "Also called a gauge stabilizer code. A stabilizer code with some of its logical qubits denoted as gauge qubits and not used for storage of logical information. Note that this doesnt lead to new codes but does lead to new error correction and fault tolerance procedures. Subsystem codes are denoted by \\([[n,k,r,d]]\\), similar to stabilizer codes, but with an extra parameter \\(r\\) denoting the number of gauge qubits.\nTo create these codes proceed as follows. Choose \\(2n\\) operators \\(\\{ \\tilde{X}_j,\\tilde{Z}_j\\}_{j=1}^n\\) from \\(\\mathsf{P}_n\\), the Pauli group on \\(n\\) qubits, such that they obey the same commutation relations as the regular \\(n\\)-qubit Pauli generators \\( \\{X_j,Z_j\\}_{j=1}^n \\) (the subscript on these latter operators indicates the single qubit the Pauli matrix acts on). The tilde operators might act on more than one physical (or bare) qubit but they behave as if they acted only on a single qubit. WLOG we can choose a stabilizer group as \\( \\mathsf{S} = \\langle Z_1,\\dots,Z_s \\rangle \\). It follows that the normalizer of \\(\\mathsf{S} \\) is \\( N(\\mathsf{S}) = \\langle i, \\tilde{Z}_1,\\dots, \\tilde{Z}_n, \\tilde{X}_{s+1},\\dots, \\tilde{X}_n \\rangle \\). We now choose a gauge group as \\( \\mathsf{G} = \\langle i, \\tilde{Z}_1,\\dots, \\tilde{Z}_s, \\tilde{X}_{s+1}, \\tilde{Z}_{s+1}, \\dots, \\tilde{X}_{s+r}, \\tilde{Z}_{s+r} \\rangle \\) with \\( s + r \\leq n \\). The logical group is choosen as \\( \\mathsf{L} = N(\\mathsf{S})/\\mathsf{G} \\simeq \\langle \\tilde{X}_{s+r+1},\\tilde{Z}_{s+r+1}, \\dots, \\tilde{X}_n,\\tilde{Z}_n \\rangle \\). Now the codespace \\( C \\) is as usual the \\(+1\\) eigenspace of the stabilizer \\( \\mathsf{S} \\). But the gauge and logical groups have further decomposed this space into \\( C = A \\otimes B \\simeq (\\mathbb{C}^2)^{\\otimes k} \\otimes (\\mathbb{C}^2)^{\\otimes r} \\). Thus the Hilbert space is partitioned into 3 sets; \\(k\\) logical qubits, \\(r\\) gauge qubits, and \\(s\\) stabilizer qubits, with \\(s+r+k=n\\).", "protection": "Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qubits. More generally, a set of errors \\( \\{ E_a \\} \\) is correctable iff \\( E_aE_b \\not\\in N(\\mathsf{S}) \\setminus \\mathsf{G} \\) for all pairs \\(a,b\\). The distance of the code is the minimal weight of operators in \\( N(\\mathsf{S}) \\setminus \\mathsf{G}\\).", "realizations": "", "notes": "When the gauge group \\( \\mathsf{G} \\) is abelian, the above is reduced to the standard stabilizer formalism.", "feature_threshold": "For correlated Pauli noise, bounds can be obtained by mapping the effect of noise on the code to a statistical mechanical model .", "parent_detail": "", "cousin_detail": "Gauge stabilizer codes reduce to stabilizer codes when there are no gauge qubits.", "_type": "ecc", "_page_id": "c_subsystem_stabilizer", "_href": "c/subsystem_stabilizer"}, "c_t-designs": {"name": "Local Haar-random circuit code", "description": "An \\(n\\)-qubit code whose codewords are a pair of approximately locally indistinguishable states produced by starting with any two orthogonal \\(n\\)-qubit states and acting with a random unitary circuit of depth polynomial in \\(n\\). Two states are locally indistinguishable if they cannot be distinguished by local measurements. A single layer of the encoding circuit is composed of about \\(n/2\\) two-qubit nearest-neighbor gates run in parallel, with each gate drawn randomly from the Haar distribution on two-qubit unitaries.\nThe above circuit elements act on nearest-neighbor qubits arranged in a line, i.e., a one-dimensional geometry (\\(D=1\\), while codes for higher-dimensional geometries require \\(O(n^{1/D})\\)-depth circuits . Follow-up work  revealed that optimal code properties require only \\(O(\\sqrt{n})\\)-depth circuits for that case, and \\(O(\\sqrt{n})\\)-depth circuits for a two-dimensional square-lattice geometry.", "protection": "In a 1D geometry, the code approximately detects any error with support on a segment of length \\(\\leq n/4\\), with deviations exponentially suppressed in \\(n\\).", "realizations": "", "notes": "", "feature_encoders": "Random local circuit of depth proportional to \\(n^{\\alpha}\\), with \\(\\alpha\\) depending on system geometry.", "parent_detail": "", "cousin_detail": "Local Haar-random codewords, like topological codewords, are locally indistinguishable .\n\n", "_type": "ecc", "_page_id": "c_t-designs", "_href": "c/t-designs"}, "c_qubits_into_qubits": {"name": "Qubit code", "description": "Encodes \\(K\\)-dimensional Hilbert space into a \\(2^n\\)-dimensional (i.e., \\(n\\)-qubit) Hilbert space. Usually denoted as \\(((n,K))\\) or \\(((n,K,d))\\), where \\(d\\) is the code's distance.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_qubits_into_qubits", "_href": "c/qubits_into_qubits"}, "c_matching": {"name": "Matching code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "\n\nMatching codes were inspired by the Kitaev honeycomb model , which realizes \\(\\mathbb{Z}_2\\) topological order.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_matching", "_href": "c/matching"}, "c_quantum_reed_muller": {"name": "Quantum Reed-Muller code", "description": "A CSS code formed from a classical Reed-Muller code in which polynomials over finite fields encode data. This is done by transforming these polynomials into the stabilizer generator matrices", "protection": "Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qubits.", "realizations": "", "notes": "", "feature_rate": "\\(\\frac{k}{n}\\), where \\(k = 2^r - {r \\choose t} + 2 \\sum_{i=0}^{t-1} {r \\choose i}\\). Additionally, CSS codes formed from binary Reed-Muller codes achieve channel capacity on erasure channels .", "feature_general_gates": "Magic state distillation in all prime dimensions", "feature_fault_tolerance": "Gate switching protocol for universal computation .", "feature_threshold": "Between \\(10^{-3}\\) and \\(10^{-6}\\) for depolarizing noise (assuming ideal decoders), see", "parent_detail": "", "cousin_detail": "Reed-Muller codes are the classical anologue of these codes.\n\nQuantum convolutional codes can be derived from Quantum Reed-Muller codes .", "_type": "ecc", "_page_id": "c_quantum_reed_muller", "_href": "c/quantum_reed_muller"}, "c_double_semion": {"name": "Double-semion code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "Double-semion code can be realized as a modular-qudit stabilizer code with \\(q=4\\) .\n\nWhen treated as ground states of the code Hamiltonian, the code states realize double-semion topological order, a topological phase of matter that also exists in twisted \\(\\mathbb{Z}_2\\) gauge theory .", "cousin_detail": "There is a logical basis for the toric and double-semion codes where each codeword is a superposition of states corresponding to all noncontractible loops of a particular homotopy type. The superposition is equal for the toric code, whereas some loops appear with a \\(-1\\) coefficient for the double semion.", "_type": "ecc", "_page_id": "c_double_semion", "_href": "c/double_semion"}, "c_movassagh_ouyang": {"name": "Movassagh-Ouyang Hamiltonian code", "description": "This is a family of codes derived via an algorithm that takes as input any binary classical code and outputs a quantum code (note that this framework can be extended to \\(q\\)-ary codes). The algorithm is probabalistic but succeeds almost surely if the classical code is random. An explicit code construction does exist for linear distance codes encoding one logical qubit. For finite rate codes, there is no rigorous proof that the construction algorithm succeeds, and approximate constructions are described instead.\nThis family strictly generalizes CSS codes (because CSS codes come only from linear or self orthogonal classical codes). These codes can be shown to be realized as a subspace of the ground space of a (geometrically) local Hamiltonian.", "protection": "Let \\(C \\subset \\{0,1,\\dots,q-1\\}^n\\) be a classical code with distance \\(d_x\\). Let \\(d_z\\) satisfy \\(q^n > 2 V_q(d_z-1) -1\\), where \\(V_q(r)\\) is the volume of the \\(q\\)-ary Hamming ball of radius \\(r\\). Then the algorithm produces a quantum code with distance \\(d = \\text{min}(d_x,d_z)\\). Asymptotically, the distance scales linearly with \\(n\\).", "realizations": "", "notes": "", "feature_rate": "The rate depends on the classical code, but distance can scale linearly with \\(n\\).", "parent_detail": "\n\nMovassagh-Ouyang codes reside in the ground space of a local Hamiltonian.", "cousin_detail": "Many, but not all, Movassagh-Ouyang codes are stabilizer codes.\n\nMovassagh-Ouyang codes are constructed from classical binary codes.", "_type": "ecc", "_page_id": "c_movassagh_ouyang", "_href": "c/movassagh_ouyang"}, "c_bacon_shor": {"name": "Bacon-Shor code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "feature_decoders": "While check operators are few-body, stabilizer weights scale with the number of qubits, and stabilizer expectation values are obtained by taking products of gauge-operator expectation values. It is thus not clear how to extract stabilizer values in a fault-tolerant manner .", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_bacon_shor", "_href": "c/bacon_shor"}, "c_floquet": {"name": "Floquet code", "description": "Dynamically-generated stabilizer-based code whose logical qubits are generated through a particular sequence of measurements such that the number of logical qubits is larger than when the code is viewed as a static subsystem stabilizer code. The code space is the \\(+1\\) eigenspace of the instantaneous stabilizer group (ISG). The ISG specifies the state of the system as a Pauli stabilizer state at a particular round of measurement, and it evolves into a (potentially) different ISG depending on the check operators measured. As opposed to subsystem codes, only specific measurement sequences maintain the codespace.", "protection": "Protects against single-qubit Pauli noise and check operator measurement errors.", "realizations": "", "notes": "", "parent_detail": "\n\nParticular sequences of measurements on this code yield an instantaneous stabilizer group.", "cousin_detail": "This code can be viewed as a subsystem stabilizer code, albeit one with less logical qubits.\n\nBoth Floquet and monitored random circuit codes can have an instantaneous stabilizer group which evolves through unitary evolution and measurements. However, Floquet codewords are generated via a specific sequence of measurements, while random-circuit codes maintain a stabilizer group after any measurement. Floquet codes have the additional capability of detecting errors induced during the measurement process; see Appx. A of Ref. .", "_type": "ecc", "_page_id": "c_floquet", "_href": "c/floquet"}, "c_quantum_hamming": {"name": "\\([[2^r, 2^r-r-2, 3]]\\) quantum Hamming code", "description": "A family of stabilizer codes of distance \\(3\\) that asymptotically saturate quantum Hamming bound.", "protection": "Protects against any single qubit error.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Quantum Hamming codes saturate the asymptotic Hamming bound.", "_type": "ecc", "_page_id": "c_quantum_hamming", "_href": "c/quantum_hamming"}, "c_gnu_permutation_invariant": {"name": "GNU permutation-invariant code", "description": "Can be expressed in terms of Dicke states where the logical states are\n\\begin{align}\n|\\overline{\\pm}\\rangle = \\sum_{\\ell=0}^{n} \\frac{(\\pm 1)^\\ell}{\\sqrt{2^n}} \\sqrt{n \\choose \\ell} |D^m_{g \\ell}\\rangle~.\n\\end{align}\nHere, \\(m\\) is the number of particles used for encoding \\(1\\) qubit, and \\(g, n \\leq m\\) are arbitrary positive integers. The state \\(|D^m_w\\rangle\\) is a Dicke state -- a normalized permutation-invariant state on \\(m\\) qubits with \\(w\\) excitations, i.e., a normalized sum over all basis elements with \\(w\\) ones and \\(m - w\\) zeroes.\nA qudit extension of such codes, based on a correspondence with binomial codes, exists .", "protection": "Depends on the family. One family which is completely symmetrized versions of Bacon-Shor codes (parameterized by \\(t\\)) protects against arbitrary weight-\\(t\\) qubit errors. Additionally, codes with large enough length \\((t+1)(3t+1)+t\\) can approximately correct \\(t\\) spontaneous decay errors.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Symmetrized versions of the Bacon-Shor codes are GNU codes\n\nGNU codes lie within the ground state of ferromagnetic Heisenberg models without an external magnetic field .\n\nSome GNU codes can protect approximately against amplitude damping errors.\n\nBinomial codes and GNU codes are both described by spin-coherent states .", "_type": "ecc", "_page_id": "c_gnu_permutation_invariant", "_href": "c/gnu_permutation_invariant"}, "c_quantum_hamming_css": {"name": "\\([[2^r, 2^r-2r-1, 3]]\\) Hamming-based CSS code", "description": "A Hamming-based CSS code is a CCS code constructed with a classical Hamming code \\([2^r-1,2^r-1-r,3]=C_X=C_Z\\).", "protection": "Protects against any single qubit error.", "realizations": "", "notes": "", "feature_fault_tolerance": "Syndrome measurement using two ancilla qubits .", "parent_detail": "", "cousin_detail": "Quantum Hamming codes result from applying the CSS construction to Hamming codes.", "_type": "ecc", "_page_id": "c_quantum_hamming_css", "_href": "c/quantum_hamming_css"}, "c_cws": {"name": "Codeword stabilized (CWS) code", "description": "This family of codes strictly generalizes stabilizer codes. They are usually denoted by \\( \\mathcal{Q} = (\\mathcal{G},\\mathcal{C}) \\) where \\(\\mathcal{G}\\) is a graph and \\(\\mathcal{C}\\) is a \\( (n,K,d) \\) binary classical code. From the graph we form the unique graph state (stabilizer state) \\( |G \\rangle \\). From the classical code we form Pauli \\(Z\\)-type operators \\( W_i = Z^{c_{i,1}} \\otimes \\cdots \\otimes Z^{c_{i,n}} \\), where \\(c_{i,j} \\) is the \\(j\\)-th bit of the \\(i\\)-th classical codeword. The CWS codewords are then \\( | i \\rangle =  W_i | G \\rangle \\).\nThere is an alternative description to the one above that is locally Clifford-equivalent. In particular, we can describe CWS codes as \\( \\mathcal{Q} = (S,\\mathcal{W})\\) where \\(S\\) is a stabilizer group and \\( \\mathcal{W} = \\{ w_\\ell \\}_{\\ell = 1}^K \\) is a family of \\(K\\) \\(n\\)-qubit Pauli strings. We then form CWS codeswords as \\( | i \\rangle = w_i | S \\rangle \\), where \\( | S \\rangle \\) is the (unique) stabilizer state of \\(S\\).", "protection": "Code distance \\(\\mathcal{Q} = ( \\mathcal{G},\\mathcal{C}) \\) is upper bounded by the distance of the classical code \\(\\mathcal{C} \\).", "realizations": "", "notes": "", "feature_encoders": "If \\( \\mathcal{C} \\) has an efficient classical encoder, then so does the CWS code \\( \\mathcal{Q} = (\\mathcal{G},\\mathcal{C}) \\).", "feature_decoders": "There is no known efficient algorithm to decode non-additive (non-stabilizer) CWS codes.", "parent_detail": "", "cousin_detail": "The Movassagh-Ouyang codes overlap the CWS codes but neither family is contained in the other.", "_type": "ecc", "_page_id": "c_cws", "_href": "c/cws"}, "c_css": {"name": "Calderbank-Shor-Steane (CSS) stabilizer code", "description": "An \\([[n,k,d]]\\) stabilizer code admitting a set of stabilizer generators that are either \\(Z\\)-type or \\(X\\)-type Pauli strings. The stabilizer generator matrix is of the form\n\\begin{align}\nH=\\begin{pmatrix}0 & H_{Z}\\\\\nH_{X} & 0\n\\end{pmatrix}~.\n\\label{eq:parity}\n\\end{align}\nEncoding is based on two related binary linear codes, an \\([n,k_X,d_X]\\) code \\(C_X\\) and \\([n,k_Z,d_Z]\\) code \\(C_Z\\), satisfying \\(C_X^\\perp \\subseteq C_Z\\). The resulting CSS code has \\(k=k_X+k_Z-n\\) logical qubits and distance \\(d\\geq\\min\\{d_X,d_Z\\}\\). The \\(H_X\\) (\\(H_Z\\)) block of \\(H\\) \\eqref{eq:parity} is the parity-check matrix of the code \\(C_X\\) (\\(C_Z\\)). The requirement \\(C_X^\\perp \\subseteq C_Z\\) guarantees that the \\(X\\)-stabilizers, defined in the symplectic representation as rows of \\(H_X\\), commute with the \\(Z\\)-stabilizers of associated with \\(H_Z\\). The codewords are\n\\begin{align}\n|\\gamma + C_Z^\\perp \\rangle = \\sum_{\\eta \\in C_Z^\\perp} |\\gamma + \\eta\\rangle,\n\\end{align}\nfor \\(\\gamma \\in C_X\\).\nA CSS code has stabilizer weight \\(w\\) if the highest weight of any stabilizer generator is \\(w\\), i.e., any row and column of \\(H_X\\) and \\(H_Z\\) has weight at most \\(w\\). In the context of comparing weight as well as of noise models biased toward \\(X\\)- or \\(Z\\)-type errors, an extended notation for CSS codes is \\([[n,k,(d_X,d_Z),w]]\\). The quantity \\(\\min\\{d_X,d_Z\\}\\) is often called the worst-case minimum distance.\nThere exists a many-to-one mapping from size three chain complexes to CSS codes  that allows one to extract code properties from topological features of the complexes. Codes constructed in this manner are sometimes called homological CSS codes, but they are equivalent to CSS codes. This mapping has allowed the application of results from topology to error correction, yielding QLDPC codes with favorable properties.\nA chain complex of size three is given by binary vector spaces \\(A_2\\), \\(A_1\\), \\(A_0\\) and binary matrices \\(\\partial_{i=1,2}\\) (called boundary operators) \\(A_i\\) to \\(A_{i-1}\\) that satisfy \\(\\partial_1 \\partial_2 = 0\\). Such a complex is typically denoted as\n\\begin{align}\nA_2 \\xrightarrow{\\partial_2} A_1 \\xrightarrow{\\partial_1} A_0~.\n\\label{eq:chain}\n\\end{align}\nOne constructs a CSS code by associating a physical qubit to every basis element of \\(A_1\\), and defining parity-check matrices \\(H_X=\\partial_1^T\\) and \\(H_Z=\\partial_2\\)). That way, the spaces \\(A_0\\) and \\(A_2\\) can be associated with \\(X\\)-type and \\(Z\\)-type Pauli operators, respectively, and boundary operators determine the Paulis making up the stabilizer generators. The requirement \\(\\partial_1 \\partial_2 = 0\\) guarantees that the \\(X\\)-stabilizers associated with \\(H_X\\) commute with the \\(Z\\)-stabilizers associated with \\(H_Z\\).\nUsually, the chain complex \\eqref{eq:chain} used in the construction comes from the chain complex associated with a cellulation of a manifold. When the manifold is a two-dimensional surface, its entire chain is used. Higher-dimensional manifolds allow for longer chain complexes, and one can use the three largest non-trivial vector spaces in its chain.\nThe reverse mapping is as follows . Given a CSS code with parity check matrices \\(H_X\\) and \\(H_Z\\), let both boundary operators be \\(\\partial = H_Z^TUH_X\\) for an arbitrary invertible matrix \\(U\\). The fact that the stabilizer generators commute ensures that the boundary operator satisfies \\(\\partial^2=0\\), yielding a chain complex.", "protection": "Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qubits.\nUsing the relation to chain complexes, the number of encoded logical qubits is equal to the dimension of the first \\(\\mathbb{Z}_2\\)-homology of the chain complex, \\(H_1(\\partial, \\mathbb{Z}_2) = \\frac{\\text{Ker}(\\partial_1)}{\\text{Im}(\\partial_2)}\\). The distance of the CSS code is equal to the minimum of the combinatorial (\\(d-1\\))-systole of the cellulated \\(d\\)-dimensional manifold and its dual. For surfaces, there is an upper bound of \\(d \\leq O(\\sqrt{n})\\) on the distance , therefore codes coming from higher-dimensional spaces are studied for larger distance.", "realizations": "", "notes": "Introduction to CSS-to-homology dictionary by M. Hastings.\n\nOriginal requirement of \\(C_X^\\perp \\subset C_Z\\)  has been relaxed to absorb hypergraph product codes.", "feature_encoders": "Stabilizer measurement .", "feature_fault_tolerance": "Steane error correction .", "parent_detail": "Stabilizer generators can be expressed as either only \\(X\\)-type or only \\(Z\\)-type. However, any \\([[n,k,d]]\\) stabilizer code can be mapped onto a \\([[4n,2k,2d]]\\) weakly self-dual CSS code, with the mapping preserving geometric locality of a code up to a constant factor .\n\nMovassagh-Ouyang codes stem from a prescription that converts an arbitrary classical code into a quantum code.", "cousin_detail": "Construction uses two related binary linear codes \\(C_X\\) and \\(C_Z\\).\n\nCSS codes for which \\(C_X=C_Z \\equiv C\\) are called weakly self-dual since \\(C^{\\perp} \\subseteq C\\). The stabilizer group of such codes is invariant under the Hadamard gate exchanging \\(X\\) and \\(Z\\).", "_type": "ecc", "_page_id": "c_css", "_href": "c/css"}, "c_quantum_parity": {"name": "Quantum parity code (QPC)", "description": "A \\([[m_1 m_2,1,\\min(m_1,m_2)]]\\) CSS code family obtained from concatenating an \\(m_1\\)-qubit phase-flip repetition code with an \\(m_2\\)-qubit bit-flip repetition code. Logical codewords are\n\\begin{align}\n\\begin{split}\n|\\overline{0}\\rangle&=\\frac{1}{2^{m_2/2}}\\left(|0\\rangle^{\\otimes m_1}+|1\\rangle^{\\otimes m_1}\\right)^{\\otimes m_2}\\\\\n|\\overline{1}\\rangle&=\\frac{1}{2^{m_2/2}}\\left(|0\\rangle^{\\otimes m_1}-|1\\rangle^{\\otimes m_1}\\right)^{\\otimes m_2}~.\n\\end{split}\n\\end{align}", "protection": "Has distance \\(d=\\min(m_1,m_2)\\).", "realizations": "The \\([[m^2,1,m]]\\) codes for \\(m\\leq 7\\) have been realized in trapped-ion quantum devices .\n\nNon-determinisitic linear-optical encoding  whose success probability \\(P_{E}\\) is determined by the efficiency \\(\\eta\\) of the photonic encoding circuit. A threshold \\(\\eta > 0.82 \\) exists for the efficiency, above which \\(P_{E}\\to 1\\) as \\(m_1\\to\\infty\\) given particular \\(m_2\\).\n\nStudied in the context of error-corrected quantum repeaters .", "notes": "", "parent_detail": "\n\nA QPC is a concatenation of a phase-flip repetition code with a bit-flip repetition code.", "cousin_detail": "A QPC is a concatenation of a bit-flip and a phase-flip repetition codes.\n\nA QPC is a non-gauge instance of a Bacon-Shor code.", "_type": "ecc", "_page_id": "c_quantum_parity", "_href": "c/quantum_parity"}, "c_quantum_repetition": {"name": "Quantum repetition code", "description": "Encodes \\(1\\) qubit into \\(n\\) qubits according to \\(|0\\rangle\\to|\\phi_0\\rangle^{\\otimes n}\\) and \\(|1\\rangle\\to|\\phi_1\\rangle^{\\otimes n}\\). Also known as a bit-flip code when \\(|\\phi_i\\rangle = |i\\rangle\\), and a phase-flip code when \\(|\\phi_0\\rangle = |+\\rangle\\) and \\(|\\phi_1\\rangle = |-\\rangle\\).", "protection": "Bit-flip code detects bit-flip errors \\(X\\) on \\(\\left\\lfloor (n-1)/2\\right\\rfloor\\) qubits and does not detect any phase-flip errors \\(Z\\). Phase-flip code detects phase-flip errors \\(Z\\) on \\(\\left\\lfloor (n-1)/2\\right\\rfloor\\) qubits and does not detect any bit-flip errors \\(X\\).", "realizations": "15-qubit IBM processor .\n\nSycamore processor by Google Quantum AI .\n\nSee Table S6 in Ref.  for a history of earlier implementations.", "notes": "Logical basis for the bit-flip code is spanned by GHz (a.k.a. cat) states \\(|0\\rangle^{\\otimes n}\\pm|1\\rangle^{\\otimes n}\\), which are used in Shor error correction.", "parent_detail": "", "cousin_detail": "Bit-flip codespace is the ground-state space of a one-dimensional classical Ising model with nearest-neighbor interactions.", "_type": "ecc", "_page_id": "c_quantum_repetition", "_href": "c/quantum_repetition"}, "c_honeycomb": {"name": "Honeycomb code", "description": "Floquet code inspired by the Kitaev honeycomb model  whose logical qubits are generated through a particular sequence of measurements.\nThe code is defined on a hexagonal (honeycomb) lattice with a physical qubit located at each vertex. Edges are labeled \\(x\\), \\(y\\), and \\(z\\), such that one edge of each label meet at every vertex. Check operators are defined as \\(XX\\) acting on any two qubits joined by an \\(x\\) edge, and similarly for \\(y\\) and \\(z\\). The hexagonal lattice is 3-colorable, so the hexagons may be labeled 0, 1, 2 such that no two neighboring hexagons have the same label.\nThe code-generating measurement pattern consists of measuring the check operators located on all of the \\(r\\)-labeled edges in round \\(r\\) mod 3. The code space is the \\(+1\\) eigenspace of the instantaneous stabilizer group (ISG). The ISG specifies the state of the system as a Pauli stabilizer state at a particular round of measurement, and it evolves into a (potentially) different ISG depending on the check operators measured.", "protection": "Protective features similar to the surface code: on a torus geometry, the code protects two logical qubits with a code distance proportional to the linear size of the torus. Properties of the code with open boundaries are discussed in Refs. .", "realizations": "", "notes": "", "feature_encoders": "Initialization can be performed by preparing each pair of qubits  on an edge in some particular state independently specified by the effective-one-qubit operators (two-qubit Pauli strings centered on an edge) and then beginning the check measurement sequence. This is analogous to projecting a state into the code space by measuring stabilizers.", "feature_general_gates": "There are two types of logical operators, inner and outer. An inner logical operator is the product of check operators on a homologically nontrivial cycle. They belong to the stabilizer group as a subsystem code. Outer logical operators have an interpretation in terms of magnetic and electric operators of an embedded surface code, and they do not belong to the stabilizer group of the associated subsystem code.", "feature_decoders": "The ISG has a static subgroup for all time steps \\(r\\geq 3\\) \u2013 that is, a subgroup which remains a subgroup of the ISG for all future times \u2013 given by so-called plaquette stabilizers. These are stabilizers consisting of products of check operators around homologically trivial paths. The syndrome bits correspond to the eigenvalues of the plaquette stabilizers. Because of the structure of the check operators, only one-third of all plaquettes are measured each round. The syndrome bits must therefore be represented by a lattice in spacetime, to reflect when and where the outcome was obtained.", "feature_fault_tolerance": "One can run a fault-tolerant decoding algorithm by (1) bipartitioning the syndrome lattice into two graphs which are congruent to the Cayley graph of the free abelian group with three generators (up to boundary conditions) and (2) performing a matching algorithm to deduce errors.", "feature_threshold": "\\(0.2\\%-0.3\\%\\) in a controlled-not circuit model with a correlated minimum-weight perfect-matching decoder .\n\n\\(1.5\\%<p<2.0\\%\\) in a circuit model with native two-body measurements and a correlated minimum-weight perfect-matching decoder . Here, \\(p\\) is the collective error rate of the two-body measurement gate, including both measurement and correlated data depolarization error processes.", "parent_detail": "The honeycomb code is the first 2D Floquet code.", "cousin_detail": "Measurement of each check operator involves two qubits and projects the state of the two qubits to a two-dimensional subspace, which we regard as an effective qubit. These effective qubits form a surface code on a hexagonal superlattice. Electric and magnetic operators on the embedded surface code correspond to outer logical operators of the Floquet code. In fact, outer logical operators transition back and forth from magnetic to electric surface code operators under the measurement dynamics.\n\nBoth honeycomb and subsystem color codes are generated via periodic sequences of measurements. However, any measurement sequence can be performed on the color code without destroying the logical qubits, while honeycomb codes can be maintained only with specific sequences. Honeycomb codes require a shorter measurement cycle and use fewer qubits at the given code distance .\n\nThe Honeycomb code admits a representation in terms of Majorana fermions. This leads to a possible physical realization of the code in terms of tetrons , where each physical qubit is composed of four Majorana modes.\n\nMatching and honeycomb codes are both inspired by the Kitaev honeycomb model .\n\nThe Floquet check operators are weight-two, and each qubit participates in one check each round.", "_type": "ecc", "_page_id": "c_honeycomb", "_href": "c/honeycomb"}, "c_permutation_invariant": {"name": "Permutation-invariant code", "description": "Codes which are stabilized by the symmetric group \\(S_n\\) on \\(n\\) elements, in a generalization of stabilizer codes to binary codes utilizing (non-abelian) group actions (in particular, \\(S_n\\) is non-abelian).", "protection": "Depends on the family. The GNU permutation-invariant family (parameterized by \\(t\\)) protects against arbitrary weight \\(t\\) qubit errors and approximately corrects spontaneous decay errors . Other related codes protect against amplitude damping  while admitting a constant number of excitations, and against deletion errors .", "realizations": "", "notes": "Can be constructed using real polynomials for high-dimensional qudit spaces .", "feature_encoders": "With quantum harmonic oscillators (superconducting charge qubits in a ultrastrong coupling regime) in \\(O(N)\\) as in . Can be done in \\(O(N^2)\\) steps using quantum circuits , or using geometric phase gates in \\(O(N)\\) .", "feature_decoders": "For a family of codes, using projection, probability amplitude rebalancing, and gate teleportation can be done in \\(O(N^2)\\) .", "parent_detail": "", "cousin_detail": "The cyclic group of these codes is a subgroup of the \\(S_n\\) symmetric group used in permutation invariant codes.", "_type": "ecc", "_page_id": "c_permutation_invariant", "_href": "c/permutation_invariant"}, "c_monitored_random_circuits": {"name": "Monitored random-circuit code", "description": "Error-correcting code arising from a monitored random circuit. Such a circuit is described by a series of intermittant random local projective Pauli measurements with random unitary time-evolution operators. An important sub-family consists of Clifford monitored random circuits, where unitaries are sampled from the Clifford group . When the rate of projective measurements is independently controlled by a probability parameter \\(p\\), there can exist two stable phases, one described by volume-law entanglement entropy and the other by area-law entanglement entropy. The phases and their transition can be understood from the perspective of quantum error correction, information scrambling, and channel capacities .\nMonitored random circuits have a finite information capacity that decays exponentially with respect to system size . When \\( p = 0 \\), the random circuit achieves channel capacity, meaning that it stores the most amount of information possible. This notion quantifies the recoverability of information and the reversability of the system under the monitored random dynamics. In the volume-law phase (\\( p < p_c \\) for some critical probability \\(p_c\\)), the channel capacity remains non-zero, and the monitored channel projects an initial state into a random error-correcting code . With appropriately chosen evolution operators and measurements, the code is a stabilizer code whose parameters depend on time, \\( [[n,k(t),d(t)]] \\). A similar notion applies to Haar random circuits with measurements .", "protection": "When in the volume-law phase, protects against random projective measurements at a rate \\( p < p_c \\). While the true code distance is not known, it is conjectured to be proportional to the contiguous distance. As first described in Ref. , the  contiguous distance for these circuits is defined with respect to all partitions of the system.", "realizations": "Measurement induced quantum phases have been realized in a trapped-ion processor .", "notes": "Connections to information scrambling in black hole physics, as introduced in Section 11 of . In particular, monitored random circuits can be viewed as the Hayden-Preskill recovery problem  running backwards in time. In this setting, the volume-law entanglement phase of the monitored circuit describes the phase when information can be recovered from an old black hole (ie, a black hole that is maximally entangled with the early universe).\n\nMapping monitored random circuits to statistical mechanics models can help estimate thresholds and code distances for these systems .", "feature_rate": "Rate can be finite , depending on the family of random codes generated by the circuit.", "feature_encoders": "The dynamics of the monitored random circuit can be recast in the language of stabilizer codes . The stabilizer group of the error-correcting code resulting from a monitored Clifford circuit either grows or shrinks with each time step, depending on which projective measurements were performed during the time step.\n\nOne can construct optimal single-copy encoding operations for strong purification transitions", "feature_decoders": "The recovery operation is the reverse unitary transformation with access to the measurement record (for dynamically generated codes with a strong purification transition)", "feature_threshold": "Above the critical measurement rate \\( p_c\\), the natural error correction properties of the circuit can no longer protect the information. This can be interpreted as the code threshold.\n\nThese dynamically generated codes saturate the trade off between density of encoded information and the error rate threshold", "parent_detail": "Monitored random circuits are random circuits where projective measurements are interspersed throughout the circuit and measurement results are recorded.", "cousin_detail": "Topological order can be generated in 2D monitored random circuits .", "_type": "ecc", "_page_id": "c_monitored_random_circuits", "_href": "c/monitored_random_circuits"}, "c_quantum_polar": {"name": "Quantum polar code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_quantum_polar", "_href": "c/quantum_polar"}, "c_stabilizer_over_gf4": {"name": "Stabilizer code over \\(GF(4)\\)", "description": "An \\([[n,k,d]]\\) stabilizer code whose encoding is based on a self-dual quaternary \\([n, n-k, d^*]_4\\) code over \\(GF(4)^n\\) with respect to the trace inner product where \\(d \\ge d^*\\).\n\\(GF(4)\\) consists of \\(\\{0, 1, w, \\bar{w}\\}\\), with \\(\\bar{w} = w^2 = w + 1\\), \\(\\mathrm{Tr}(x) = x+\\bar{x}\\), and trace inner product \\(u * v = \\mathrm{Tr}(u \\cdot \\bar{v})\\).\nThere is a mapping \\(L\\) between Pauli matrices \\(I, Y, Z, X\\) and \\(0, 1, \\bar{w}, w\\), in turn \\([A, B] \\Leftrightarrow Tr\\langle L(A), L(A)\\rangle\\).\nThe classical self-dual code \\(C\\) over \\(GF(4)^n\\) corresponds to the stabilizer group \\(\\mathsf{S}\\) while \\(C^{\\perp}\\) corresponds to \\(\\mathsf{N(S)}\\).", "protection": "Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qubits.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Quaternary \\(q=4\\) linear codes are used in this construction.", "_type": "ecc", "_page_id": "c_stabilizer_over_gf4", "_href": "c/stabilizer_over_gf4"}, "c_xyz_hexagonal": {"name": "XYZ\\(^2\\) hexagonal stabilizer code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_xyz_hexagonal", "_href": "c/xyz_hexagonal"}, "c_subsystem_color": {"name": "Subsystem color code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_subsystem_color", "_href": "c/subsystem_color"}, "c_happy": {"name": "Pastawski-Yoshida-Harlow-Preskill (HaPPY) code", "description": "Holographic code constructed out of a network of perfect tensors that tesselates hyperbolic space. Physical qubits are associated with uncontracted tensor legs at the boundary of the tesselation, while logical qubits are associated with uncontracted legs in the bulk. The code serves as a minimal model for several aspects of the AdS/CFT holographic duality. The construction below is described for qubits, but straightforward generalizations exist to modular qudits, oscillators, and rotors .\nEncoding is accomplished using a tensor network of \\([[5,1,3]]\\) encoding isometries, which are six-legged perfect tensors (with five legs corresponding to the physical qubits and one for the encoded logical qubit). A \\(2n\\)-legged perfect tensor is proportional to an isometry for any bipartition of its indices into a set \\(A\\) and a complementary set \\(A^{\\perp}\\) such that \\(|A|\\leq|A^{\\perp}|\\).\nTo construct the encoding, one first uniformly tiles the hyperbolic AdS/CFT disc using pentagons and hexagons. Then, one places a 6-legged \\([[5,1,3]]\\) encoding tensor at each hexagon and pentagon, contracting legs between neighboring shapes and leaving one leg uncontracted at each pentagon. This construction forms an encoding isometry from the uncontracted legs in the bulk to the uncontracted legs at the boundary.", "protection": "Protects against erasure errors and Pauli errors on the boundary qubits.", "realizations": "", "notes": "", "feature_rate": "The pentagon HaPPY code converges to \\(\\frac{1}{\\sqrt{5}} \\approx 0.447\\). The pentagon/hexagon HaPPY code, with alternating layers of pentagons and hexagons in the tiling, has a rate of \\(0.299\\) if the last layer is a pentagon layer and a rate of \\(0.088\\) if the last layer is a hexagon layer.", "feature_encoders": "Heisenberg-picture encoding is done through tensor pushing. Each bulk operator (logical) is pushed to an operator supported on a portion of the boundary region (physical). Pushing all the bulk operators through results in reconstruction of the boundary.", "feature_transversal_gates": "For locality-preserving physical gates on the boundary, the set of transversally implementable logical operations in the bulk is strictly contained in the Clifford group .", "feature_decoders": "Greedy algorithm for decoding specified in Ref. .", "feature_threshold": "\\(26\\%\\) for boundary erasure errors on the the pentagon/hexagon HaPPY code, which has alternating layers of pentagons and hexagons in the tiling.\n\n\\(\\sim 50\\%\\) for boundary erasure errors on the single-qubit HaPPY code, which has a central pentagon encoding one bulk operator and hexagons tiling all other layers\n\n\\(16.3\\%\\) for boundary Pauli errors on the single-qubit HaPPY code with 3 layers .\n\nThere is no threshold for the pentagon HaPPY code as a constant number of errors (two) can make bulk recovery impossible.", "parent_detail": "\n\nThe HaPPY code is a stabilizer code because it is defined by a contracted network of stabilizer tensors; see Thm. 6 in Ref. .", "cousin_detail": "The \\([[5,1,3]]\\) encoding isometry tiles various holographic codes because its corresponding tensor is perfect .", "_type": "ecc", "_page_id": "c_happy", "_href": "c/happy"}, "c_quantum_triorthogonal": {"name": "Triorthogonal code", "description": "A triorthogonal \\(m \\times n\\) binary matrix is triorthogonal if its rows \\(r_1, \\ldots, r_m\\) satisfy \\(|r_i \\cdot r_j| = 0\\) and \\(|r_i \\cdot r_j \\cdot r_k| = 0\\), where addition and multiplication are done on \\(\\mathbb{Z}_2\\). The triorthogonal code associated with the matrix is constructed by mapping non-zero entries in even-weight rows to \\(X\\) operators, and \\(Z\\) operators for each row in the orthogonal complement.", "protection": "Weight \\(t\\) Pauli errors, where \\(t\\) depends on the family. For example, Ref.  provides a family of distance \\(2\\) codes. It also presents a \\([[49, 1, 5]]\\) code.", "realizations": "", "notes": "Reference  presents a classification of triorthogonal codes up to \\(n + k \\leq 38\\) by associating each triorthogonal code with a Reed-Muller polynomial.", "feature_rate": "Depends on the matrix. Ref.  gave a family of \\(\\frac{k}{3k+8}\\) codes with magic-state distillation scaling exponent \\(\\gamma = \\log_2 \\frac{3k+8}{k}\\).", "feature_encoders": "Encoder for magic states for the code constructed in .", "feature_transversal_gates": "Admits transversal \\(T\\) gates  and the controlled-controlled-\\(Z\\) gate.", "feature_general_gates": "Triorthogonal codes can be used for high-quality magic-state distillation .", "feature_threshold": "Approximately \\(\\frac{1}{3k + 1}\\) .", "parent_detail": "", "cousin_detail": "Classification of triorthongonal codes yields a connection to Reed-Muller polynomials .", "_type": "ecc", "_page_id": "c_quantum_triorthogonal", "_href": "c/quantum_triorthogonal"}, "c_stab_4_2_2": {"name": "\\([[4,2,2]]\\) CSS code", "description": "Four-qubit CSS stabilizer code with generators \\(\\{XXXX, ZZZZ\\} \\) and codewords \\begin{align} \\begin{split} |\\overline{00}\\rangle = (|0000\\rangle + |1111\\rangle)/\\sqrt{2}\\\\ |\\overline{01}\\rangle = (|0011\\rangle + |1100\\rangle)/\\sqrt{2}\\\\ |\\overline{10}\\rangle = (|0101\\rangle + |1010\\rangle)/\\sqrt{2}\\\\ |\\overline{11}\\rangle = (|0110\\rangle + |1001\\rangle)/\\sqrt{2} \\end{split}.\\end{align} Its subcode is the \\([[4,1,2]]\\) code, whose \\(\\pm\\)-basis codewords can be written as \\begin{align} |\\overline{\\pm}\\rangle = \\frac{1}{2}(|00\\rangle \\pm |11\\rangle)^{\\otimes 2}\\\\\\end{align} This code can be thought of as a concatenation of a two-qubit bit-flip with a two-qubit phase-flip code.", "protection": "Detects a single-qubit error  or single erasure . Not able to correct arbitrary single-qubit errors because \\( \\lfloor \\frac{d-1}{2} \\rfloor =0 \\). Approximately corrects a single amplitude damping error .", "realizations": "Realized in trapped-ion quantum devices  and superconducting circuits .", "notes": "Concatenating \\([[4,2,2]]\\) code with surface code can generate 2D topological code with a reasonable circuit-based threshold .", "feature_transversal_gates": "Transversal Pauli, Hadamard, and two-qubit \\(R\\) gates .", "feature_fault_tolerance": "Preparation of certain states along with transversal gates can be performed fault-tolerantly, but requires post-selection because the code cannot correct errors .", "parent_detail": "\\([[4,1,2]]\\) subcode is the smallest member of the sub-family of \\([[m^2,1,m]]\\) QPC codes.", "cousin_detail": "\\([[4,2,2]]\\) code is the smallest toric code.\n\n\\([[4,2,2]]\\) can be derived from \\([[5,1,3]]\\) code using a protocal that converts \\([[n,k,d]]\\) code into an \\([[n-1, k+1, d-1]]\\) code; see Sec. 3.5 in Gottesman .\n\n\\([[4,2,2]]\\) code is a small quantum polar code .\n\n\\([[4,2,2]]\\) code approximately corrects a single amplitude damping error .", "_type": "ecc", "_page_id": "c_stab_4_2_2", "_href": "c/stab_4_2_2"}, "c_steane": {"name": "Steane \\([[7,1,3]]\\) code", "description": "A \\([[7,1,3]]\\) CSS code that uses the classical binary \\([7,4,3]\\) Hamming code for protecting against \\(X\\) errors and its dual \\([7,3,4]\\) for \\(Z\\) errors. The parity-check matrix for the \\([7,4,3]\\) Hamming code is\n\\begin{align}\n  H = \\left(\\begin{matrix}\n    1&0&0&1&0&1&1\\\\\n    0&1&0&1&1&0&1\\\\\n    0&0&1&0&1&1&1\n  \\end{matrix}\\right),\n\\end{align}\nand the check matrix for the Steane code is therefore\n\\begin{align}\n  \\left(\\begin{matrix}\n    0&H\\\\\n    H&0\n  \\end{matrix}\\right).\n\\end{align}\nThe stabilizer group for the Steane code has six generators.", "protection": "The Steane code is a distance 3 code. It detects errors on 2 qubits, corrects errors on 1 qubit.", "realizations": "Realized in a ten qubit QCCD trapped-ion quantum computer .\n\nRealized on seven trapped-ion qubits .", "notes": "", "feature_fault_tolerance": "Syndrome measurement can be done with flag qubits  or with no extra qubits .", "parent_detail": "Steane code is the smallest member of a family of Hamming-based CSS codes.", "cousin_detail": "The Steane code is constructed from a classical Hamming code.\n\nSteane code is the smallest 2D color code.", "_type": "ecc", "_page_id": "c_steane", "_href": "c/steane"}, "c_stab_5_1_3": {"name": "\\([[5,1,3]]\\) code", "description": "Five-qubit stabilizer code with generators that are symmetric under cyclic permutation of qubits, \\begin{align} \\begin{split} S_1 &= IXZZX \\\\ S_2 &= XZZXI \\\\ S_3 &= ZZXIX \\\\ S_4 &= ZXIXZ. \\end{split}\\end{align}", "protection": "Smallest stabilizer code that protects against a single error on any one qubit. Detects two-qubit errors.", "realizations": "First realized in NMR .\n\nDemonstration with superconducting qubits .", "notes": "", "feature_transversal_gates": "Pauli gates are transversal.", "parent_detail": "The \\([[5,1,3]]\\) code is derived from the \\([5,3,3]_4\\) Hamming code.", "cousin_detail": "The smallest perfect code.\n\nThe smallest quantum MDS code.\n\n\\([[5,1,3]]\\) code is the smallest known example of quantum cyclic code .\n\n\\([[5,1,3]]\\) code Hamiltonian is local when expressed in terms of Majorana operators .\n\n\\([[5,1,3]]\\) code Hamiltonian is local when expressed in terms of Majorana operators .", "_type": "ecc", "_page_id": "c_stab_5_1_3", "_href": "c/stab_5_1_3"}, "c_shor_nine": {"name": "Shor \\([[9,1,3]]\\) code", "description": "Nine-qubit CSS code that is the smallest such code to correct a single-qubit error. The logical state is encoded using\n\\begin{align}\n\\begin{split}\n|\\overline{0}\\rangle&=\\frac{1}{2\\sqrt{2}}\\left(|000\\rangle+|111\\rangle\\right)^{\\otimes3}\\\\\n|\\overline{1}\\rangle&=\\frac{1}{2\\sqrt{2}}\\left(|000\\rangle-|111\\rangle\\right)^{\\otimes3}~.\n\\end{split}\n\\end{align}\nThe code works by concatenating each qubit of a phase-flip with a bit-flip repetition code. Therefore, the code can correct both type of errors simultaneously.\nSpecifically, a state is phase-flip error-corrected by a three-qubit phase-flip repetition code, with stabilizer generators \\(X_0 X_1I_2\\) and \\(X_0I_1X_2\\) in \\(X\\) basis, where the subscript represents the qubit index. Each logical qubit is encoded using\n\\begin{align}\n\\label{eq:phase-flip}\n\\begin{split}\n  |\\overline{0}\\rangle &= |+_0+_1+_2\\rangle \\\\\n  |\\overline{1}\\rangle &= |-_0-_1-_2\\rangle .\n\\end{split}\n\\end{align}\nThen, each physical qubit used in \\eqref{eq:phase-flip} is further encoded in the three-qubit bit-flip repetition code,\n\\begin{align}\n  |\\pm _j \\rangle  = \\frac{1}{\\sqrt{2}}( |0_{j0}0_{j1}0_{j2}\\rangle \\pm |1_{j0}1_{j1}1_{j2}\\rangle),\n\\end{align}\neach with bit-flip error stabilizer generators \\(Z_{j0}Z_{j1}I_{j2}\\) and  \\(Z_{j0}I_{j1}Z_{j2} \\) with \\(j=0,1,2\\).\nNotice now the phase-flip error stabilizer generator is extended as \\(X_j = X_{j0}X_{j1}X_{j2}\\).\nAs a result, the stabilizer generators with the qubit index flattened are\n\\begin{align}\n\\begin{split}\n  Z_{j0}Z_{j1}I_{j2} &\\rightarrow \\{Z_0Z_1, Z_3Z_4, Z_6Z_7\\} \\\\\n  Z_{j0}I_{j1}Z_{j2} &\\rightarrow \\{Z_0Z_2, Z_3Z_5, Z_6Z_8\\} \\\\\n  X_0 X_1I_2  &\\rightarrow  \\{X_0X_1X_2X_3X_4X_5\\}\\\\\n  X_0 I_1X_2  &\\rightarrow  \\{X_0X_1X_2X_6X_7X_8\\}.\n\\end{split}\n\\end{align}", "protection": "The code detects two-qubit errors or corrects an arbitrary single-qubit error.", "realizations": "Realized in trapped-ion quantum devices, with 98.8(1)% and 98.5(1)% fidelity for state \\(|\\overline{0}\\rangle\\) and \\(|\\overline{1}\\rangle\\), respectively .", "notes": "Shor's code is the first known quantum error correction code.", "parent_detail": "Shor's code is part of the sub-family of \\([[m^2,1,m]]\\) QPC codes.", "cousin_detail": "Shor's code is a concatenation of a three-qubit bit-flip with a three-qubit phase-flip repetition code.\n\nShor's code is a concatenation of a three-qubit bit-flip with a three-qubit phase-flip repetition code.\n\nShor's code is the smallest surface code defined on the projective plane .", "_type": "ecc", "_page_id": "c_shor_nine", "_href": "c/shor_nine"}, "c_stab_15_1_3": {"name": "\\([[15,1,3]]\\) Reed-Muller code", "description": "\\([[15,1,3]]\\) CSS code that is most easily thought of as a tetrahedral 3D color code.\nThis code contains 15 qubits, represented by four vertices, four face centers, six edge centers, and one body center.\nThe tetrahedron is cellulated into four identical polyhedron cells by connecting the body center to all four face centers, where each face center is then connected by three adjacent edge centers.\nEach colored cell corresponds to a weight-8 \\(X\\)-check, and each face corresponds to a weight-4 \\(Z\\)-check.\nA logical \\(Z\\) is any weight-3 \\(Z\\)-string along an edge of the entire tetrahedron.\nThe logical \\(X\\) is any weight-7 \\(X\\)-face of the entire tetrahedron.", "protection": "", "realizations": "", "notes": "The \\([[15,1,3]]\\) code can be converted into the smallest known stabilizer code with a fault-tolerant logical \\(T\\) gate (i.e., the \\([[10,1,2]]\\) code) through a \"morphing procedure\" .", "feature_rate": "Magic-state distillation scaling exponent \\( \\gamma= \\log_d (n/k)\\approx 2.46\\) .", "feature_transversal_gates": "A transversal logical \\(T^\\dagger\\) is implemented by applying a \\(T\\) gate on every qubit .", "feature_general_gates": "Code is often used in magic-state distillation protocols because of its transversal \\(T\\) gate .", "feature_fault_tolerance": "Combining the Steane code and the 15-qubit Reed-Muller code through a fault-tolerant conversion can result in a universal transversal gate set that does not need magic state distillation .", "parent_detail": "The \\([[15,1,3]]\\) code is often noted as the 15-qubit quantum Reed-Muller code in the literature.\n\nThe \\([[15, 1, 3]]\\) code is a triorthogonal code", "cousin_detail": "The \\([[15,1,3]]\\) code is the smallest 3D color code.", "_type": "ecc", "_page_id": "c_stab_15_1_3", "_href": "c/stab_15_1_3"}, "c_ramanujan_tensor_product": {"name": "Ramanujan tensor-product code", "description": "Constructed from a Ramanujan quantum code and an asymptotically good classical LDPC code using distance balancing. Ramanujan quantum codes are defined using Ramanujan complexes which are simplicial complexes that generalise Ramanujan graphs. Combining the quantum code obtained from a Ramanujan complex and a good classical LDPC code, which can be thought of as coming from a 1-dimensional chain complex, yields a new quantum code that is defined on a 2-dimensional chain complex. This 2-dimensional chain complex is obtained by the co-complex of the product of the 2 co-complexes. The length, dimension and distance of the new quantum code depend on the input codes.", "protection": "Without distance balancing, a Ramanujan code can have \\(d_X =\\Omega(\\log n)\\) and \\(d_Z = \\Omega (n)\\). For 2D Ramanujan complexes, distance-balanced codes protect against errors with minimum distance \\(d = \\Omega(\\sqrt{n \\log n}\\). For 3D Ramanujan complexes, distance-balanced codes protect against errors with minimum distance \\(d= \\Omega(n^{1/2}\\log n )\\).", "realizations": "", "notes": "Codes were first to break a 20-year record set by the Freedman-Meyer-Luo code for the lower bound on scaling of the minimum distance .", "feature_rate": "For 2D Ramanujan complexes, the rate is \\(\\Omega(\\sqrt{ \\frac{1}{n \\log n} })\\), with minimum distance \\(d = \\Omega(\\sqrt{n \\log n}) \\). For 3D, the rate is \\( \\Omega(\\frac{1}{\\sqrt{n}\\log n}) \\) with minimum distance \\(d \\geq \\sqrt{n} \\log n \\).", "feature_decoders": "For 2D simplicial complexes, cycle code decoder admitting a polynomial-time decoding algorithm can be used .", "parent_detail": "Code is constructed using product of complexes .", "cousin_detail": "Ramanujan tensor-product constructions use distance balancing to increase distance.\n\nIntroduce a twist, which is an automorphism on one of the complexes in the tensor product, to increase distance .\n\nCodes that are formed from tensor products of 1-complexes .\n\nRamanujan codes broke 20-year record on minimum code distance set by Freedman-Meyer-Luo codes.", "_type": "ecc", "_page_id": "c_ramanujan_tensor_product", "_href": "c/ramanujan_tensor_product"}, "c_fiber_bundle": {"name": "Hastings-Haah-O'Donnell fiber-bundle code", "description": "Code constructed by combining a random LDPC code as the base and a cyclic repetition code as the fiber of a fiber bundle. After applying distance balancing, a QLDPC code with distance \\(\\Omega(n^{3/5}\\text{polylog}(n))\\) and rate \\(\\Omega(n^{-2/5}\\text{polylog}(n))\\) is obtained.", "protection": "", "realizations": "", "notes": "", "feature_rate": "Rate \\(k/n = \\Omega(n^{-2/5}/\\text{polylog}(n))\\), distance \\(d=\\Omega(n^{3/5}/\\text{polylog}(n))\\). This is the first QLDPC code to achieve a distance scaling better than \\(\\sqrt{n}~\\text{polylog}(n)\\).", "feature_decoders": "Greedy algorithm can be used to efficiently decode \\(X\\) errors, but no known efficient decoding of \\(Z\\) errors yet .", "parent_detail": "Fiber-bundle code can be viewed as a homological product code with twisted product.", "cousin_detail": "Fiber-bundle code constructions use distance balancing to increase distance.", "_type": "ecc", "_page_id": "c_fiber_bundle", "_href": "c/fiber_bundle"}, "c_quantum_expander": {"name": "Quantum expander code", "description": "CSS codes constructed from bipartite expander graphs with bounded left and right vertex degrees. For every bipartite graph there is an associated matrix (the parity check matrix) with columns indexed by the left vertices, rows indexed by the right vertices, and 1 entries whenever a left and right vertex are connected. This matrix can serve as the parity check matrix of a classical code. Two bipartite expander graphs can be used to construct a quantum CSS code (the quantum expander code) by using the parity check matrix of one as \\(X\\) checks, and the parity check matrix of the other as \\(Z\\) checks.", "protection": "Pauli errors of weight \\(\\leq t\\), distance scales as \\(\\Omega(n^{1/2})\\).", "realizations": "", "notes": "", "feature_rate": "\\([[n,k=\\Theta(n),d=O(\\sqrt{n})]]\\) code with asymptotically constant rate.", "feature_decoders": "Ref.  details a linear time decoder, which corrects \\(\\Omega(n^{1/2})\\) adversarial errors.", "feature_threshold": "Current estimate of \\(2.7 \\cdot 10^{-16}\\) in locally stochastic noise model .", "parent_detail": "", "cousin_detail": "Quantum expander codes are constructed from classical expander codes.", "_type": "ecc", "_page_id": "c_quantum_expander", "_href": "c/quantum_expander"}, "c_homological_product": {"name": "Homological product code", "description": "CSS code formulated using the CSS chain-complex construction using chain complexes consisting of products of two other chain complexes.", "protection": "Given two codes \\([[n_a, k_a, d_a, w_a]]\\) for \\(a\\in\\{1,2\\}\\), where \\(w_a\\) denotes the maximum hamming weight of all rows and columns of \\(\\partial_a\\), the homological product code has parameter \\([[n=n_1 n_2, k=k_1 k_2, d\\leq d_1 d_2, w\\leq w_1+w_2]]\\). From this formula, and the fact that a randomly selected boundary operator \\(\\partial\\) yields a CSS code that is good with high probability, we see that the product code has \\(k=\\Theta(n)\\) and \\(w=O(\\sqrt{n})\\) with high probability. The main result in  is to show that the product code actually has linear distance with high probability as well. To sum up, it is shown that we have a family of \\([[n,k=c_1 n, d=c_2 n, w=c_3 \\sqrt{n}]]\\) codes given small enough \\(c_1,c_2,c_3\\).", "realizations": "", "notes": "", "feature_fault_tolerance": "Universal set of gates can be obtained by fault-tolerantly mapping between different encoded representations of a given logical state .", "feature_decoders": "Union-find .", "parent_detail": "\n\nHomological product construction is a primary tool for generating QLDPC codes with favorable parameters. Such codes are typically not geometrically local.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_homological_product", "_href": "c/homological_product"}, "c_balanced_product": {"name": "Balanced product code", "description": "Family of CSS quantum codes based on products of two classical codes which share common symmetries. The balanced product can be understood as taking the usual tensor/hypergraph product and then factoring out the symmetries factored. This reduces the overall number of physical qubits n, while, under certain circumstances, leaving the number of encoded qubits \\(k\\) and the code distance \\(d\\) invariant. This leads to a more favourable encoding rate \\(k/n\\) and relative distance \\(d/n\\) compared to the tensor/hypergraph product.", "protection": "Taking balanced products of two classical LDPC codes which have a symmetry group which grows linearly in their block lengths were known to give quantum LDPC codes with a linear rate and which were conjectured to have linear distance . This conjecture was proved in Ref. .", "realizations": "", "notes": "", "feature_rate": "A notable family of balanced product codes encode \\(k \\in \\Theta(n^{4/5})\\) logical qubits with distance \\(d \\in \\Omega(n^{3/5})\\) for any number of physical qubits \\(n\\). Additionally, it is known that the code constructed from the balanced product of two good classical LDPC codes over groups of order \\(\\Theta(n)\\) has a constant encoding rate .", "feature_decoders": "BP-OSD decoder .", "parent_detail": "\n\n", "cousin_detail": "Some special cases of balanced product codes are fiber bundle codes .\n\nDistance balancing is used to form balanced-product subsystem codes .\n\nDistance balancing is used to form balanced-product subsystem codes .", "_type": "ecc", "_page_id": "c_balanced_product", "_href": "c/balanced_product"}, "c_xyz_product": {"name": "XYZ product code", "description": "A non-CSS QLDPC code constructed from three classical codes. The construction of an XYZ product code is similar to that of a hypergraph product code and related codes. The idea is that rather than taking a product of only two classical codes to produce a CSS code, a third classical code is considered, acting with Pauli-\\(Y\\) operators.", "protection": "", "realizations": "", "notes": "", "feature_rate": "Not much has been proven about the relationship between XYZ-product codes and other codes. The logical dimension depends on properties of the input classical codes, specifically similarity invariants from abstract algebra. It is conjectured that specific instances of XYZ-product codes have a constant encoding rate and a minimum distance of \\(d \\in \\Theta(n^{2/3})\\) .", "parent_detail": "\n\nUsing the assumption that the input classical codes are LDPC codes, XYZ-product codes will be QLDPC codes.", "cousin_detail": "Construction of a XYZ product code is similar to a hypergraph product, but using a third classical code.", "_type": "ecc", "_page_id": "c_xyz_product", "_href": "c/xyz_product"}, "c_hypergraph_product": {"name": "Hypergraph product code", "description": "A family of \\([[n,k,d]]\\) CSS codes whose construction is based on two binary linear seed codes \\(C_1\\) and \\(C_2\\).", "protection": "The hypergraph product has distance \\(d=O(\\sqrt{n})\\). The number of encoded logical qubits is \\(k=O(k_1k_2)\\) where \\(k_1\\) and \\(k_2\\) are the dimensions of the classical seed codes \\(C_1\\) and \\(C_2\\).", "realizations": "", "notes": "", "parent_detail": "Lifted-product codes for trivial group \\(G\\) are hypergraph-product codes.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_hypergraph_product", "_href": "c/hypergraph_product"}, "c_lifted_product": {"name": "Lifted-product code", "description": "QLDPC code that is the \"lifted version\" of a hypergraph product code. The construction of a lifted product code is similar to that of a hypergraph product code; a sort of ''product'' is taken between two input classical codes to produce a CSS code. What differentiates a lifted product code from a hypergraph product code is that a reduction of symmetry is exploited to decrease the number of physical qubits required. Lifted product codes are notable because they were the first QLDPC codes to achieve almost linear distance.", "protection": "Code performance strongly depends on \\(G\\) , but lifted product codes contain  families of QLDPC codes with the parameters \\([[n, k = \\Theta(n), d = \\Theta(n)]]\\).", "realizations": "", "notes": "Construction outlined in talk by R. O'Donnell.\n\nPopular summary in Quanta Magazine.\n\nFormerly known as generalized hypergraph product codes , and later renamed to lifted-product codes .", "feature_rate": "Lifted-product codes include the first examples  of (asymptotically) good QLDPC codes, i.e., codes with asymptotically constant rate and linear distance. The existence of such codes proves the QLDPC conjecture . Another notable family encodes \\(k \\in \\Theta(n^\\alpha \\log n)\\) logical qubits with distance \\(d \\in \\Omega(n^{1 - \\alpha} / \\log n)\\) for any number of physical qubits \\(n\\) and any real parameter \\(0 \\leq \\alpha < 1\\) . There is no known simple way to compute the logical dimension \\(k\\) in the general case .", "feature_decoders": "BP-OSD decoder  adds OSD-like post-processing to the belief propogation decoder for improved performance.", "parent_detail": "Lifted product obtained from the homological product over a group algebra \\(\\mathbb{F}_2 G\\) of two length-two chain complexes over \\(\\mathbb{F}_2 G\\), i.e., classical binary codes with a free action of the group \\(G\\).\n\n", "cousin_detail": "", "_type": "ecc", "_page_id": "c_lifted_product", "_href": "c/lifted_product"}, "c_fractal_surface": {"name": "Fractal surface code", "description": "Kitaev surface code on a fractal geometry, which is obtained by removing qubits from the surface code on a cubic lattice. Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Fractal surface codes are obtained by removing qubits from the surface code on a cubic lattice.", "_type": "ecc", "_page_id": "c_fractal_surface", "_href": "c/fractal_surface"}, "c_xzzx": {"name": "XZZX surface code", "description": "Non-CSS derivative of the surface code whose generators are \\(XZXZ\\) Pauli strings associated, clock-wise, to the vertices of each face of a two-dimensional lattice (with a qubit located at each vertex of the tessellation).", "protection": "As a stabilizer code, \\([[n=O(d^2), k=O(1), d]]\\).", "realizations": "", "notes": "Originally formulated as an example of \\(\\mathbb{Z}_2\\) topological order in the Wen plaquette model .", "feature_threshold": "\\(50\\%\\) with pure \\(X\\) or \\(Z\\) errors and both a maximum-likelihood decoder and a minimum-weight perfect-matching decoder.\n\n\\(18.7\\%\\) at standard depolarising noise with a maximum-likelihood decoder.\n\nFor large but finite \\(X\\)- or \\(Z\\)-biased noise, the code's thresholds exceed the zero-rate hashing bound.\nThe gap exceeds \\(2.9\\%\\) when \\(X\\) (\\(Z\\)) error is \\(300\\) times more frequent than other Paulis.", "parent_detail": "", "cousin_detail": "\\(XZZX\\) code, a non-CSS derivative of the surface code, is obtained from the surface code by Hadamard gates.\n\nSubsystem symmetries play a role in finite-bias decoders for both codes .", "_type": "ecc", "_page_id": "c_xzzx", "_href": "c/xzzx"}, "c_freedman_meyer_luo": {"name": "Freedman-Meyer-Luo code", "description": "Hyperbolic surface code constructed using cellulation of a Riemann Manifold \\(M\\) exhibitng systolic freedom . Codes derived from such manifolds can achieve distances scaling better than \\(\\sqrt{n}\\), something that is impossible using closed 2D surfaces or 2D surfaces with boundaries . Improved codes are obtained by studying a weak family of Riemann metrics on closed 4-dimensional manifolds \\(S^2\\otimes S^2\\) with the \\(Z_2-homology\\).", "protection": "Four-dimensional manifolds with weak systolic freedom yield \\([[n,2,\\Omega(\\sqrt{n \\sqrt{\\log n}})]]\\) surface codes.", "realizations": "", "notes": "See thesis by Fetaya for pedagogical exposition .", "feature_rate": "Codes held a 20-year record the best lower bound on asymptotic scaling of the minimum code distance, \\(d=\\Omega(\\sqrt{n \\sqrt{\\log n}})\\), broken by Ramanujan tensor-product codes.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_freedman_meyer_luo", "_href": "c/freedman_meyer_luo"}, "c_real_projective_plane": {"name": "Projective-plane surface code", "description": "A family of Kitaev surface codes on the non-orientable 2-dimensional compact manifold \\(\\mathbb{R}P^2\\) (in contrast to a genus-\\(g\\) surface). Whereas genus-\\(g\\) surface codes require \\(2g\\) logical qubits, qubit codes on \\(\\mathbb{R}P^2\\) are made from a single logical qubit.", "protection": "If \\(\\mathcal{C}\\) is a cellulation of \\(\\mathbb{R}P^2\\), then the bit-flip distance \\(d_X\\) is the shortest cycle in \\(\\mathcal{C}\\), and the phase-flip distance \\(d_Z\\) is the shortest cycle in the dual cellulation \\(\\mathcal{C}^*\\).", "realizations": "", "notes": "", "feature_rate": "The rate is \\(1/n\\), where \\(n\\) is the number of edges of the particular cellulation.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_real_projective_plane", "_href": "c/real_projective_plane"}, "c_surface": {"name": "Kitaev surface code", "description": "A family of abelian topological CSS stabilizer codes whose generators are few-body \\(X\\)-type and \\(Z\\)-type Pauli strings associated to the stars and plaquettes, respectively, of a cellulation of a two-dimensional surface (with a qubit located at each edge of the cellulation). Toric code often either refers to the construction on the two-dimensional torus or is an alternative name for the general construction. The construction on surfaces with boundaries is often called the planar code .\nThe original construction can be naturally extended to arbitrary dimensional manifolds . Given a cellulation, qubits are put on \\(i\\)-dimensional faces, \\(X\\)-type stabilizers are associated with \\((i-1)\\)-faces, while \\(Z\\)-type stabilizers are associated with \\(i+1\\)-faces. Several constructions based on hyperbolic manifolds (see code children below) have yielded distances scaling favorably with the number of qubits.", "protection": "Toric code on an \\(L\\times L\\) torus is a \\([[2L^2,2,L]]\\) CSS code, and there exists a planar code with \\([[L^2,1,L]]\\) . More generally, the code distance is related to the homology of the cellulation .", "realizations": "Distance-two surface codes have been implemented by Andersen et al. , Erhard et al. , and Google Quantum AI .\n\nSignatures of corresponding topological phase of matter detected in superconducting circuits  and two-dimensional arrays of Rydberg atoms .\n\nDistance-three surface code implemented at ETH Zurich  and on the Zuchongzhi 2.1 superconducting quantum processor .", "notes": "2D and 3D surface code visualization tool.\n\nToric code introductions from error-correction perspective by J. Haah and condensed-matter perspective by M. Levin and C. Nayak.", "feature_rate": "Rate depends on the underlying cellulation and manifold. For general 2D manifolds, \\(kd^2\\leq c(\\log k)^2 n\\) for some constant \\(c\\) , meaning that (1) 2D surface codes with bounded geometry have distance scaling at most as \\(O(\\sqrt{n})\\) , and (2) surface codes with finite rate can only achieve an asymptotic minimum distance that is logarithmic in \\(n\\). Loewner's theorem provides an upper bound for any bounded-geometry surface code .", "feature_transversal_gates": "Pauli gates on torus geometry.", "feature_general_gates": "Clifford gates can be implemented via lattice surgery  or braiding defects .\n\nNon-Clifford gates require magic state distillation , Dehn twists , or just-in-time decoding .", "feature_threshold": "\\(10.9\\%\\) with independent \\(X/Z\\) errors for square tiling .\n\n\\(18.9\\%\\) with depolarizing noise for square tiling .\n\n\\(50\\%\\) with loss errors for square tiling .\n\n\\(3.3\\%\\) with phenomenological noise for square tiling .\n\n\\(0.5-1.1\\%\\) for various error models .", "feature_encoders": "Unitary .\n\nDissipative .\n\nStabilizer measurement-based .", "feature_decoders": "Minimum weight perfect-matching , union-find , renormalization group , tensor network , Markov chain Monte Carlo , cellular automaton , machine learning .", "parent_detail": "\n\nWhen treated as ground states of the code Hamiltonian, the code states realize \\(\\mathbb{Z}_2\\) topological order, a topological phase of matter that also exists in \\(\\mathbb{Z}_2\\) lattice gauge theory . On the other hand, translation-invariant 2D qubit topological stabilizer codes are equivalent to several copies of the Kitaev surface code .", "cousin_detail": "Planar (toric) code obtained from hypergraph product of two repetition (cyclic) codes.\n\nTranslation-invariant 2D qubit topological stabilizer codes are equivalent to several copies of the Kitaev surface code .", "_type": "ecc", "_page_id": "c_surface", "_href": "c/surface"}, "c_four_dimensional_hyperbolic": {"name": "Guth-Lubotzky code", "description": "Hyperbolic surface code based on cellulations of certain four-dimensional manifolds. The manifolds are shown to have good homology and systolic properties for the purposes of code construction, with corresponding codes exhibiting linear rate.\nGuth and Lubotzky  show that there exists \\(\\epsilon\\), a four-dimensional hyperbolic manifold \\(M\\), and a sequence of manifolds \\(M_i\\) such that\neach \\(M_i\\) is a finite sheeted covering of \\(M\\), and the four-dimensional volumes of the manifolds \\(\\text{Vol}_4(M_i)\\) of the sequence tend to infinity.\nAlso, the dimension of the second homology and size of systoles are bounded by \\(H_2(M_i, Z_2) \\geq \\frac{\\text{Vol}_4(M_i)}{100}\\) and \\(\\text{Sys}_2(M_i) \\geq \\text{Vol}_4(M_i)^\\epsilon\\), respectively.\nThen given any cellulation of \\(M\\), it can naturally be extended to cellulations for each of the manifolds \\(M_i\\) and used to define CSS codes via the homological construction by choosing the size three chain complex consisting of the \\(3,2\\) and \\(1\\)-cells of the cellulations.\nFor dense cellulations (i.e. large \\(n\\)) the number of physical qubits for these codes will scale with the volume of the manifolds.\nTherefore, bounds on the dimension of the second homology and size of systoles are achieved in terms of \\(n\\) for large \\(n\\).", "protection": "Protection stems from the relationship between properties of manifolds and CSS codes derived from their cellulation. The number of physical \\(k\\) qubits and distance \\(d\\) of the code will scale as \\(\\Omega(n)\\) and \\(\\Omega(n^\\epsilon)\\), respectively.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_four_dimensional_hyperbolic", "_href": "c/four_dimensional_hyperbolic"}, "c_hyperbolic_surface": {"name": "Hyperbolic surface code", "description": "An extension of the Kitaev surface code construction to hyperbolic manifolds in dimension two or greater. Given a cellulation of a manifold, qubits are put on \\(i\\)-dimensional faces, \\(X\\)-type stabilizers are associated with \\((i-1)\\)-faces, while \\(Z\\)-type stabilizers are associated with \\(i+1\\)-faces.", "protection": "Constructions (see code children below) have yielded distances scaling favorably with the number of qubits. The use of hyperbolic surfaces allows one to circumvent bounds on surface code parameters that are valid for surfaces with bounded geometry.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Both holographic and hyperbolic surface codes utilize tesselations of hyperbolic surfaces. Encodings for the former are hyperbolically tiled tensor networks, while the latter is defined on hyperbolically tiled physical-qubit lattices.", "_type": "ecc", "_page_id": "c_hyperbolic_surface", "_href": "c/hyperbolic_surface"}, "c_two_dimensional_hyperbolic_surface": {"name": "Two-dimensional hyperbolic surface code", "description": "Hyperbolic surface codes based on a tessellation of a closed 2D manifold with a hyperbolic geometry (i.e., non-Euclidean geometry, e.g., saddle surfaces when defined on a 2D plane).\nFor a tessellation involving regular polygons with \\( r \\) sides and \\( s \\) polygons meeting at each edge, the number of logical qubits is given by \\( k = (1-2/r - 2/s) n + 2 \\). Some possible tilings are \\( {r,s}: {7,3}, {5,4} \\). The weight of the stabilizer generators are dependent on the tiling, with \\({5,4}\\) having lower weight than \\({7,3}\\).", "protection": "Protects against Pauli errors with distance \\( d \\propto \\log(n) \\). Code parameters are \\( [[n, (1-2/r - 2/s)  n + 2, \\log(n) ]] \\)", "realizations": "", "notes": "See Sec III A of Ref.  for a description of this code.\n\nConnection to percolation theory as shown in .", "feature_rate": "Two-dimensional hyperbolic surface codes have an asymptotically constant encoding rate \\( k/n \\) with a distance scaling logarithmically with \\( n\\) when the surface is closed. The encoding rate depends on the tiling \\( {r,s} \\) and is given by \\( k/n = (1-2/r - 2/s) + 2/n \\), which approaches a constant value as the number of physical qubits grows. The weight of the stabilizers is \\( r \\) for \\( Z \\)-checks and \\( s \\) for \\( X \\)-checks. For open boundary conditions, the code reduces to constant distnace.", "feature_decoders": "Due to the symmetries of hyperbolic surface codes, optimal measurement schedules of the stabilizers can be found .", "feature_threshold": "1\\(\\%\\) - 5\\(\\%\\) for a \\({5,4}\\) tiling under minimum-weight decoding . For larger tilings, the lower bound on the distance decreases, suggesting the threshold will also decrease.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_two_dimensional_hyperbolic_surface", "_href": "c/two_dimensional_hyperbolic_surface"}, "c_higher_dimensional_surface": {"name": "Higher-dimensional surface code", "description": "A family of Kitaev surface codes on planar or toric surfaces of dimension greater than two. Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_higher_dimensional_surface", "_href": "c/higher_dimensional_surface"}, "c_homological_cv": {"name": "Homological continuous-variable (CV) code", "description": "An \\([[n,1]]_{\\mathbb{R}}\\) oscillator-into-oscillator CSS code defined using homological structres associated with an \\(n-1\\) simplex.\nStabilizer generators are defined by two orthogonal subspaces of the \\(C_1\\) in the chain complex. \\(C_X = \\partial_2 C_2\\) and \\(C_P = \\partial_1^T Q\\) for some \\(Q \\subset C_0\\). The standard approach would use \\(Q = C_0\\), which would mean the logical dimension would be the dimension of the 1st homology group \\(H^1\\). However, \\(H^1\\) is trivial for the \\(n-1\\) simplex, so one chooses \\(Q \\neq C_0\\) such that exactly one stabilizer is removed, yielding a stabilizer code instead of a single stabilized state.'", "protection": "Protects against certain types of erasure errors (depending on the specific dimension). Certain constructions also protect arbitrary sized errors on multiple photon states.", "realizations": "No experimental realization. However, Ref.  describes a potential experimental optical procedure for the simplest non-trival code with 5 modes.", "notes": "", "feature_encoders": "Encoding depends on the specific dimension, but can generally be done using generalized conditional-rotation and Fourier-transform gates.", "feature_decoders": "Decoding requires a different circuit for each possible erasure error, with no general circuit decoding any possible erasure error. Every circuit relies on a generalized conditional rotation, which Ref.  calls the QND Gate and which is defined as \\(QND_c | x , y \\rangle = |x + c y, y \\rangle\\).", "parent_detail": "\n\nHomological CV codes are bosonic CSS codes.", "cousin_detail": "CSS and homological CV codes utilize chain complexes in code construction, with the latter complexes having trivial homology.\n\nThe Niest-Andersen-Cerf code can be viewed as a scheme to replicate quantum information in multiple regions .", "_type": "ecc", "_page_id": "c_homological_cv", "_href": "c/homological_cv"}, "c_hybrid_qudit_oscillator": {"name": "Hybrid qudit-oscillator code", "description": "Encodes a \\(K\\)-dimensional logical Hilbert space into \\(n_1\\) qudits of dimension \\(q\\) and \\(n_2 \\neq 0\\) oscillators, i.e., the Hilbert space of \\(\\ell^2\\)-normalizable functions on \\(\\mathbb{Z}_q^{n_1} \\times \\mathbb{R}^{n_2}\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "The physical Hilbert space of a hybrid qubit-oscillator code contains at least one oscillator.", "cousin_detail": "Hybrid code with \\(n_1=0\\).", "_type": "ecc", "_page_id": "c_hybrid_qudit_oscillator", "_href": "c/hybrid_qudit_oscillator"}, "c_gkp": {"name": "Gottesman-Kitaev-Preskill (GKP) code", "description": "Bosonic qudit-into-oscillator code whose stabilizers are oscillator displacement operators \\(\\hat{S}_q(2\\alpha)=e^{-2i\\alpha \\hat{p}}\\) and \\(\\hat{S}_p(2\\beta)=e^{2i\\beta \\hat{q}}\\). To ensure \\(\\hat{S}_q(2\\alpha)\\) and \\(\\hat{S}_p(2\\beta)\\) generate a stabilizer group that is Abelian, there is another constraint that \\(\\alpha\\beta=2k\\pi\\) where \\(k\\) is an integer. Codewords can be expressed as equal weight superpositions of coherent states on an infinite lattice, such as a square lattice in phase space with spatial period \\(2\\sqrt{\\pi}\\). The exact GKP state is non-normalizable, so approximate constructs have to be considered.", "protection": "For stabilizer \\(\\hat{S}_q(2\\alpha),\\hat{S}_p(2\\beta)\\), code can correct displacement errors up to \\(\\frac{\\alpha}{2}\\) in the \\(q\\)-direction and \\(\\frac{\\beta}{2}\\) at \\(p\\)-direction. Approximately protects against photon loss errors , outperforming most other codes designed to explicitly protect against loss . Very sensitive to dephasing errors . A biased-noise GKP error correcting code can be prepared by choosing \\(\\alpha\\neq \\beta\\).", "realizations": "Approximate GKP code is realized on a superconducting microwave cavity  and a trapped-ion oscillator .", "notes": "", "feature_encoders": "Preparation of approximate GKP states is studied both theoretically and experimentally on circuit-QED platforms, by putting the GKP lattice inside a Gaussian envelope , , .", "feature_transversal_gates": "Clifford gates can be realized by performing linear optics operations, sympletic transformations and displacements , all of which are Gaussian operations. Pauli gates can be performed using displacement operators.", "feature_general_gates": "By applying GKP error correction to Gaussian input states, universality can be achieved without non-Gaussian elements .", "feature_decoders": "Syndrome measruement of displacement error can be done by applying a controlled-displacement controlled by an ancilla qubit. The syndrome information can be obtained by measuring the ancilla qubit after controlled-displacement opearation. See Section. 2D in .\n\nPauli \\(X\\),\\(Y\\) and \\(Z\\) measurements can be performed by measuring \\(-\\hat{p},\\hat{q}-\\hat{p}\\) and \\(\\hat{q}\\) repectively. If the measurement outcome is closed to an even multiple of \\(\\sqrt{\\pi}\\), then the outcome is +1. If the measurement outcome is closed to an odd multiple of \\(\\sqrt{\\pi}\\), then the outcome is -1. See Section. 2D in .", "parent_detail": "\n\nGKP codes defined on rectangular lattice are bosonic CSS codes, which more general lattices yield bosonic stabilizer codes.", "cousin_detail": "GKP codes approximately protect against photon loss .", "_type": "ecc", "_page_id": "c_gkp", "_href": "c/gkp"}, "c_oscillators_into_oscillators": {"name": "Oscillator-into-oscillator code", "description": "Encodes Hilbert space of \\(\\ell^2\\)-normalizable functions on \\(\\mathbb{R}^k\\) into that on \\(\\mathbb{R}^n\\). Usually denoted as \\(((n,k))_{\\mathbb{R}}\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "Bosonic code with infinite-dimensional logical subspace.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_oscillators_into_oscillators", "_href": "c/oscillators_into_oscillators"}, "c_niset_andersen_cerf": {"name": "Niest-Andersen-Cerf code", "description": "Encodes two-mode coherent states \\(\\{|\\alpha\\rangle, |\\beta\\rangle\\}\\) over two modes into four modes such that the values \\((\\alpha,\\beta)\\) are recoverable after a single-mode erasure. There are two variations of the storage procedure: a deterministic protocol that offers recovery against a single mode erasure, and a probabalistic that can protect against multiple errors with post selection. This code is effectively protecting classical information stored in \\((\\alpha,\\beta)\\) using quantum operations.", "protection": "The deterministic protocol protects against a single erasure error on a known mode. This recovers one state perfectly and the other state with fidelity \\(F = \\frac{1}{1 + e^{-2 r}}\\) for an initial EPR pair squeezed with variance \\(e^{-2r}\\). The probabalistic protocol utilizes post-selection to protect against multiple erasures with state-dependent fidelity.", "realizations": "Realized in Ref.  in an optical system with 3 beam-splitters. The fidelity peaked around \\(0.6\\) for deterministic approach, and around \\(0.77\\) for the probabilistic approach (with a 25% chance of error).", "notes": "", "feature_encoders": "After an EPR pair preparation, use 2 continuous CNOT and 2 continuous inverse CNOT gates to entangle a bosonic EPR pair with initial states \\(|\\alpha \\rangle\\) and \\(|\\beta \\rangle\\).\n\nAlternate optical encoder using a two-mode squeezed vacuum state and two balanced beam splitters to mix the input coherent states with the EPR pair.", "feature_decoders": "Optical decoder using three beam splitters, electronic gain detectors, and two phase-insensitive amplifiers as described in Ref. .", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_niset_andersen_cerf", "_href": "c/niset_andersen_cerf"}, "c_oscillator_stabilizer": {"name": "Bosonic stabilizer code", "description": "Bosonic code whose codespace is defined as the common \\(+1\\) eigenspace of a group of mutually commuting displacement operators (exponentials of linear combinations of position and momentum operators). Such displacement-based codes closely resemble and inherit some features of qubit stabilizer codes.\nStabilizer codewords encoding a logical oscillator admit a continuous stabilizer group, and can thus be defined in terms of the group's Lie algebra, i.e., as the common \\(0\\)-eigenvalue eigenspace of mutually commuting linear combinations of oscillator position and momentum operators called annihilators. An \\(((n,k,d))_{\\mathbb{R}}\\) oscillator-into-oscillator stabilizer code is denoted as \\([[n,k,d]]_{\\mathbb{R}}\\), where \\(d\\) is the code's distance.\nStabilizer codewords encoding a finite-dimensional codespace admit a discrete infinite stabilizer group. Qubit-into-oscillator stabilizer codes are equivalent to GKP codes.\nA bosonic stabilizer code admitting a set of mutually commuting operators (either annihilators or displacements) such that each operator consists of either position or momentum operators is called a bosonic CSS code.", "protection": "Protective properties can be delineated in terms of the annihilators or displacements. If an error operator does not commute with a stabilizer group element, then that error is detectable. Oscillator-into-oscillator stabilizer codes protect against erasures of a subset of modes, while GKP codes protect against sufficiently small displacements in any number of modes.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Bosonic stabilizer codes are a continuous-variable analogue of qubit stabilizer codes.", "_type": "ecc", "_page_id": "c_oscillator_stabilizer", "_href": "c/oscillator_stabilizer"}, "c_oscillators": {"name": "Bosonic code", "description": "Also called an oscillator or a continuous-variable (CV) code. Encodes logical Hilbert space, finite- or infinite-dimensional, into a physical Hilbert space that contains at least one oscillator (a.k.a. bosonic mode or qumode). States of a single oscillator are elements of the Hilbert space of \\(\\ell^2\\)-normalizable functions on \\(\\mathbb{R}\\)). Ideal codewords may not be normalizable because the space is infinite-dimensional, so approximate versions have to be constructed.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_oscillators", "_href": "c/oscillators"}, "c_qudits_into_oscillators": {"name": "Qudit-into-oscillator code", "description": "Encodes \\(K\\)-dimensional Hilbert space into Hilbert space of \\(\\ell^2\\)-normalizable functions on \\(\\mathbb{R}^n\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "Bosonic code with finite-dimensional logical subspace.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_qudits_into_oscillators", "_href": "c/qudits_into_oscillators"}, "c_very-small-logical-qubit": {"name": "Very small logical qubit (VSLQ) code", "description": "The two logical codewords are \\(|\\pm\\rangle \\propto (|0\\rangle\\pm|2\\rangle)(|0\\rangle\\pm|2\\rangle)|0\\rangle|0\\rangle\\), where the total Hilbert space is the tensor product of two qudits (whose ground states \\(|0\\rangle\\) and second excited states \\(|2\\rangle\\) are used in the codewords) and two oscillators. In the original proposal for implementation, the single logical qubit is given by the two lowest energy states of a circuit composed of two transmons coupled to two lossy resonators, but the resonators can also be thought of as qubits since only a few low-lying Fock states are used by the code.", "protection": "Passively protects against single photon loss.", "realizations": "", "notes": "", "feature_encoders": "Engineering a circuit made of two transmons and two oscillators coupled through three driven superconducting quantum interference devices (SQUIDs) results in passive stabilization of the logical states.", "feature_general_gates": "Single logical qubit operations implemented by resonant physical qubit driving and phase shifting the SQUID drives.\n\nA CZ gate between two logical qubits implemented by coupling devices through another driven SQUID and applying a pulse to the coupling squid simultaneously with a single qubit operation on one of the logical qubits.", "feature_decoders": "Logical qubit can be measured with physical qubit measurements along \\(X\\). Can be implemented by engineering a coupling of one of the qubits to a readout cavity via the interaction \\(\\sigma_x (a+a^\\dagger)\\) . This results in an \\(X\\)-dependent shift of the readout cavity resonance which can be measured.", "parent_detail": "VSLQ code yields a logical qubit out of two physical qubits and two oscillators.", "cousin_detail": "Parts of the VSLQ codewords resemble the two-qubit phase-flip repetition code, though the code cannot correct phase errors. Unlike the phase-flip code, the VSLQ code can correct for single photon loss because it uses the second excited state in the construction, which remains distinct from the vacuum even after photon loss.", "_type": "ecc", "_page_id": "c_very-small-logical-qubit", "_href": "c/very-small-logical-qubit"}, "c_chuang-leung-yamamoto": {"name": "Chuang-Leung-Yamamoto code", "description": "Bosonic Fock-state code that encodes \\(k\\) qubits into \\(n\\) oscillators, with each oscillator restricted to having at most \\(N\\) excitations. Codewords are superpositions of oscillator Fock states, either balanced (i.e., uniform) or unbalanced. Codes can be denoted as \\([[N,n,2^k,d]]\\), which conflicts with stabilizer code notation.", "protection": "Protects against amplitude damping for up to \\(t = d-1\\) excitation losses. Defining the spacing between two Fock states \\(|u_1\\cdots u_n\\rangle\\) and \\(|v_1\\cdots v_n\\rangle\\),\n\\begin{align}\n\\text{Spacing}(u,v) = \\frac{1}{2}\\sum_{i=1}^n |u_i - v_i|,\n\\end{align}\nthe code distance \\(d\\) can be defined as the minimial spacing between Fock states making up the codewords.", "realizations": "", "notes": "", "feature_rate": "Code rate is \\(\\frac{k}{n \\log_2(N+1)}\\). To correct the loss of up to \\(t\\) excitations with \\(K+1\\) codewords, a code exists with scaling \\(N \\sim t^3 K/2\\).", "feature_encoders": "Photon Fock state input into a network of beamsplitters, phase shifters, and Kerr media. These operations all preserve total photon number. Beamsplitters and phase shifters take annihilation operators to linear combinations of annihilation operators, and the transformation matrix is unitary. The operations corresponding to Kerr nonlinear media are diagonal in the Fock basis, but they implement phases that in general depend nonlinearly on the number of photons in each mode. State preparation may require ancillary modes and be conditioned on photon-number measurement results.", "feature_decoders": "Destructive decoding with a photon number measurement on each mode.\n\nState can be decoded with a network of beamsplitters, phase shifters, and Kerr media.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_chuang-leung-yamamoto", "_href": "c/chuang-leung-yamamoto"}, "c_binomial": {"name": "Binomial code", "description": "Bosonic rotation codes designed to approximately protect against errors consisting of powers of raising and lowering operators up to some maximum power. Binomial codes can be thought of as spin-coherent states embedded into an oscillator . The \\(q\\)-dimensional qudit \\((N, S)\\) binomial codeword states are \\(\\{|\\overline{i}\\rangle\\mid i\\in \\mathbb Z_q \\}\\), where\n  \\begin{align}\n    |\\overline{i}\\rangle = \\frac{1}{\\sqrt{q^N}} \\sum_{\\substack{p=0\\\\p\\equiv i \\pmod{q}}}^{(q-1)(N+1)} \\sqrt{\\binom{N+1}{p}_q} \\ket{p(S+1)}.\n\\end{align}\n  Here, \\(\\binom{N+1}{p}_q\\) are extended binomial coefficients, or polynomial coeffiients, defined recursively as\n  \\begin{align}\n    \\binom{n}{m}_1 \\equiv 1,\\quad \\binom{n}{m}_q \\equiv \\sum_{k=0}^n \\binom{n}{k}\\binom{k}{m-k}_{q-1}.\n\\end{align}", "protection": "An \\((N, S)\\) binomial code protects against \\(L\\) boson losses, \\(G\\) boson gains, and dephasing up to \\(\\hat{n}^{\\D}\\), where \\(S=L+G\\) and \\(N = \\mathrm{max}(L,G,2D)\\). Binomial codes approximately protect against continuous-time amplitude damping, boson loss and gain, and dephasing.", "realizations": "Realized in microwave cavities coupled to superconducting circuits .", "notes": "The mean occupation number, or average Fock-state number in maximally-mixed state of the code, is \\((N+1)(S+1)(q-1)/2 \\), where \\(q\\) is the qudit dimension.", "feature_decoders": "Photon loss and dephasing errors can be detected by measuring the phase-space rotation \\(\\exp\\left(2\\pi\\mathrm{i} hat n / (S+1)\\right)\\) and the check operator \\(J_x/J\\) in the spin-coherent state language, where \\(J\\) is the total angular momentum and \\(J_x\\) is the angular momentum in the \\(x\\) direction . This type of error correction fails for errors that are products of photon loss/gain and dephasing errors. However, for certain \\((N,S)\\) instances of the binomial code, detection of these types of errors can be done.\n\nRecovery can be done via projective measurements and unitary operations .", "parent_detail": "One can verify by direct calculation that the logical states are eigenstates of the discrete rotation operator. One has freedom in the exact form of the primitive state to choose; see Appendix B.2 of Ref. .", "cousin_detail": "For a fixed \\(S\\), binomial codes with \\(N \\to \\infty\\) coincide with cat codes as \\(\\alpha \\to \\infty\\) .\n\nIn the limit as \\(N,S \\to \\infty\\), phase measurement in the binomial code has vanishing variance, just like in a number-phase code .", "_type": "ecc", "_page_id": "c_binomial", "_href": "c/binomial"}, "c_wasilewski-banaszek": {"name": "Wasilewski-Banaszek code", "description": "Three-oscillator Fock-state code encoding a single logical qubit using codewords \\begin{align} \\begin{split} |\\overline{0}\\rangle &= \\frac{1}{\\sqrt{3}}(|003\\rangle+|030\\rangle+|300\\rangle)\\\\ |\\overline{1}\\rangle &= |111\\rangle \\end{split}.\\end{align}", "protection": "Protects against single photon loss in any one mode.", "realizations": "", "notes": "", "feature_encoders": "A qubit in the dual-rail code can be transferred to this code via a linear optical network using four ancillary modes, each with one photon input. Successful encoding is conditioned on measuring the state \\(|110\\rangle\\) on the last three modes.", "feature_general_gates": "Single-qubit gates implemented using linear optical networks, sometimes with the addition of auxiliary modes with vacuum input and (conditional) output.", "feature_decoders": "Destructive measurement with photon number measurements on each mode.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_wasilewski-banaszek", "_href": "c/wasilewski-banaszek"}, "c_dual_rail": {"name": "Dual-rail code", "description": "Two-mode code encoding a logical qubit in Fock states with one excitation. The logical-zero state is represented by \\(|01\\rangle\\), while the logical-one state is represented by \\(|10\\rangle\\).", "protection": "This is an error-detecting code against one photon loss event; it is often used in photonic quantum devices because of its ease of realization. A single loss event can be detected because, after the loss occurs, the output state \\(|00\\rangle\\) is orthogonal to the codespace. Recovery is not possible, so a successful run of a quantum circuit is conditioned on not losing a photon during the circuit.\nFor Deutsch''s  problem specifically, this code protects against errors resulting in states that have the correct photon number, but in the wrong modes .", "realizations": "", "notes": "For Deutsch's problem  with optical qubits, error correction using photon number detection reduces the error probability from \\(\\frac{1}{4} (1+e^{-\\gamma}-2e^{-3\\gamma/2}) \\)   to \\(\\frac{1}{2} (1- \\text{sech} \\gamma/2)\\).", "feature_general_gates": "General gates are performed using beamsplitters and Kerr non-linearities. Universal quantum computing can be achieved with photons in dual-rail encodings using the KLM protocol  with only linear optical elements and photon detectors.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_dual_rail", "_href": "c/dual_rail"}, "c_bosonic_rotation": {"name": "Bosonic rotation code", "description": "A single-mode Fock-state bosonic code whose codespace is preserved by a phase-space rotation by a multiple of \\(2\\pi/N\\) for some \\(N\\). The rotation symmetry ensures that encoded states have support only on every \\(N^{\\textrm{th}}\\) Fock state. For example, single-mode Fock-state codes for \\(N=2\\) encoding a qubit admit basis states that are, respectively, supported on Fock state sets \\(\\{|0\\rangle,|4\\rangle,|8\\rangle,\\cdots\\}\\) and \\(\\{|2\\rangle,|6\\rangle,|10\\rangle,\\cdots\\}\\).\nEncoding of a \\(q\\)-dimensional logical qudit admit a basis whose elements are eigenstates of the rotation operator \\(\\exp\\left(\\mathrm{i} 2\\pi \\hat{n}/qN \\right)\\), where \\(\\hat{n}\\) is the number operator diagonal in the Fock basis. Basis elements are of the form \\(\\sum_{j=0}^\\infty c_j |(kq+j)N \\rangle\\) for some coefficients \\(c_j\\) and \\(k\\). This is because the rotation acting on a general Fock-state superposition \\(\\sum_n a_n |n\\rangle\\) yields \\(\\sum_n a_n \\exp\\left(\\mathrm{i} 2\\pi n / qN \\right) |n\\rangle\\). In order for a codeword to be an eigenvector of this operation, \\(a_n\\) must be zero whenever \\(n \\neq (kq+j)N\\) for some \\(k\\).\nCodewords can be uniquely specified by choosing a primitive state \\(|\\Theta\\rangle\\). To ensure valid (orthogonal and nonzero) codewords, \\(|\\Theta\\rangle\\) must satisfy the following requirement: for each \\(j \\in \\mathbb{Z}_q\\), \\(|\\Theta\\rangle\\) must have support on the Fock state \\(|(k_j q+j)N\\rangle\\) for at least one \\(k_j \\in \\mathbb{N}_0\\). From such a primitive, the codewords \\(\\{|\\overline{j}\\rangle \\mid j \\in \\mathbb{Z}_q\\}\\) are constructed as\n\\begin{align}\n|\\overline{j}\\rangle \\propto \\sum_{m=0}^{2N-1} \\mathrm{e}^{2\\pi \\mathrm{i} m (\\hat n  / N + j) / q} |\\Theta\\rangle~.\n\\end{align}", "protection": "Losses or gains less than \\(N\\) are detectable. Dephasing rotations \\(\\exp(\\mathrm{i}\\theta \\hat{n})\\) can be detected whenever \\(\\theta\\) is roughly less than \\(\\pi/N\\). To get precise bounds on \\(\\theta\\), one needs to analyze the particular bosonic rotation code.", "realizations": "", "notes": "", "feature_general_gates": "The logical Pauli-\\(Z\\) gate can be the discrete rotation operator \\(\\mathrm{e}^{\\mathrm{i} \\pi \\hat n /N}\\), and the logical Pauli-\\(X\\) gate can be the (note: non-unitary) number-translation operator \\(\\sum_{n=0}^\\infty |n\\rangle\\bra{n+N}\\).\n\nFor qubit codes, a logical phase gate is \\(S = \\mathrm{e}^{\\pi \\mathrm{i} \\hat n^2 / 2N^2}\\).\n\nThe \\(T = \\mathrm{diag}(1,\\exp(\\mathrm{i}\\pi/4))\\) gate can be done via gate teleportation and a resource state \\(\\vert 0_N\\rangle + \\exp(\\mathrm{i}\\pi/4) \\vert 1_N \\rangle\\).\n\nA controlled-rotation gate between an order \\(N\\) rotation code and an order \\(M\\) rotation code is \\(\\mathrm{CROT}_{NM} = \\mathrm{e}^{(2\\pi\\mathrm{i} / qNM) \\hat n \\otimes \\hat n}\\).", "feature_decoders": "One can distinguish (destructively) the codewords by performing a Fock-state number measurement. If a Fock state state \\(|n\\rangle\\) is measured, then one rounds to the nearest integer of the form \\((kq+j)/N\\), and deduces that the true state was \\(|\\overline{j}\\rangle\\).\n\nOne can distinguish states in the dual basis by performing phase estimation on \\(\\mathrm{e}^{\\mathrm{i} \\theta \\hat n}\\). One then rounds the resulting \\(\\theta\\) to the nearest number \\(2\\pi j / qN\\) in order to determine which dual basis state \\(j \\in \\mathbb Z_q\\) it came from.", "feature_encoders": "The optimal way to prepare codewords depends on the exact rotation code in question .", "parent_detail": "Single-mode Fock-state codes are typically rotationally invariant.", "cousin_detail": "GKP codes utilize the translational symmetry in phase space, while rotation codes utilize rotational symmetry.", "_type": "ecc", "_page_id": "c_bosonic_rotation", "_href": "c/bosonic_rotation"}, "c_cat": {"name": "Cat code", "description": "Rotation-symmetric bosonic Fock-state code encoding a \\(q\\)-dimensional qudit into one oscillator. Codewords for a qubit code (\\(q=2\\)) consist of a coherent state \\(|\\alpha\\rangle\\) projected onto a subspace of Fock state number modulo \\(2(S+1)\\). The logical state \\(|\\overline{0}\\rangle\\) is in the \\(\\{|0\\rangle , |2(S+1)\\rangle , |4(S+1)\\rangle \\cdots \\}\\) Fock-state subspace, while \\(|\\overline{1}\\rangle\\) is in the \\(\\{|(S+1)\\rangle, |3(S+1)\\rangle , |5(S+1)\\rangle , |7(S+1)\\rangle \\cdots \\}\\) subspace. An alternative basis, valid for for general \\(q\\) and \\(\\alpha\\neq 0\\), consists of \\(q\\) coherent states distributed equidistanctly around a circle in phase space of radius \\(\\alpha\\).", "protection": "Due to the spacing between sets of Fock states, the distance between two distinct logical states is \\(d=S+1\\). Hence, this code is able to detect \\(S\\)-photon loss error.   Two-legged cat codes (\\(S=1\\)) do not protect against loss events, but there exist modifications based on sign alternation  or squeezing  that add such protection.", "realizations": "Two-legged (\\(S=1\\)) cat code has been realized by two superconducting cavities coupled through a Josephson junction .\n\nFour-legged (\\(S=2\\)) cat code has been realized in superconducting circuit . This paper is the first break-even point of quantum error-correction, where the lifetime of a logical qubit is on par with the lifetime of the noisiest constituent of the system.", "notes": "", "feature_encoders": "Lindbladian-based dissipative encoding utilizing multi-photon absorption .\n\nHamiltonian-based 'Kerr-cat' encoding utilizing the Kerr effect .\n\nCombined dissipative and Hamiltonian-based encoding utilizing two-photon exchange for \\(S=1\\) codes .", "feature_general_gates": "For \\(S=1\\), universal gates can be performed using displacement operators and a rotation based on the Kerr nonlinearity . For \\(S=2\\), squeezing replaces displacements.\n\nHolonomic gates utilizing the Berry phase of coherent states are universal .\n\nBias-preserving CNOT gate utilizing a topological Berry phase .", "feature_fault_tolerance": "Bias-preserving CNOT gate  is part of a universal bias-preserving gate set that can be made fault tolerant using concatenation .", "feature_decoders": "Measurement in the Fock basis. For a \\(2(S+1)\\) cat code, a number measurement returns outcome \\(2(S+1)k\\), if \\(k\\) is even, then it corresponds to logical 0 state; if \\(k\\) is odd, then it corresponds to logical 1 state.", "parent_detail": "The cat code is a bosonic rotation code whose primitive state is the coherent state \\(|\\alpha\\rangle\\) .", "cousin_detail": "In the limit as \\(N,S \\to \\infty\\), phase measurement in the cat code has vanishing variance, just like in a number-phase code .\n\nTwo-legged cat codewords form ground-state subspace of a Kerr Hamiltonian .", "_type": "ecc", "_page_id": "c_cat", "_href": "c/cat"}, "c_number_phase": {"name": "Number-phase code", "description": "Bosonic rotation code consisting of superpositions of Pegg-Barnett phase states ,\n\\begin{align}\n|\\phi\\rangle \\equiv \\frac{1}{\\sqrt{2\\pi}}\\sum_{n=0}^{\\infty} \\mathrm{e}^{\\mathrm{i} n \\phi} \\ket{n}.\n\\end{align}\nSince phase states and thus the ideal codewords are not normalizable, approximate versions need to be constructed. The codes' key feature is that, in the ideal case, phase measurement has zero uncertainty, making it a good canditate for a syndrome measurement.\nLogical states of an order-\\(N\\) number-phase qubit encoding are \\(|\\overline{0}\\rangle= \\sum_{m=0}^{2N-1} |\\phi = m\\pi/N\\rangle\\) and \\(|\\overline{1}\\rangle = \\sum_{m=0}^{2N-1} (-1)^m |\\phi=m\\pi/N\\rangle\\). By performing the summation over \\(m\\), one finds that \\(|\\overline{0}\\rangle\\) is supported on Fock states \\(|2kN\\rangle\\), while \\(|\\overline{1}\\rangle\\) is supported on states \\(|(2k+1)N\\rangle\\), for \\(k \\geq 0\\).", "protection": "Number-phase codes of order \\(N\\) detect up to \\(N\\) photon loss or gain errors, and dephasing up to \\(\\theta = \\pi/N\\).", "realizations": "", "notes": "", "feature_decoders": "Measurement done in the logical \\(X\\), or dual, basis has zero uncertainty in the case of ideal number phase codes. Approximate number-phase codes are characterized by vanishing phase uncertainty.\n\nNumber measurement can be done by using the CROT gate \\(\\mathrm{e}^{(2\\pi \\mathrm{i} / NM) \\hat n \\otimes \\hat n}\\). See Section 4.B.1 of Ref. .", "feature_fault_tolerance": "Fault-tolerant computation schemes with number-phase codes have been proposed based on concatenation with Bacon-Shor subsystem codes .", "parent_detail": "Number-phase codes are bosonic rotation codes with the primitive state is a Pegg-Barnett phase state .", "cousin_detail": "Number phase codes are a manifestation of planar-rotor GKP codes in an oscillator. Both codes protect against small shifts in angular degrees of freedom.", "_type": "ecc", "_page_id": "c_number_phase", "_href": "c/number_phase"}, "c_fock_state": {"name": "Fock-state bosonic code", "description": "Qudit-into-oscillator code whose protection against amplitude damping (i.e., photon loss) stems from the use of disjoint sets of Fock states for the construction of each code basis state. The simplest example is the dual-rail code, which has codewords consisting of single Fock states \\(|10\\rangle\\) and \\(|01\\rangle\\). This code can detect a single loss error since a loss operator in either mode maps one of the codewords to a different Fock state \\(|00\\rangle\\). More involved codewords consist of several well-separated Fock states such that multiple loss events can be detected and corrected.", "protection": "Code distance \\(d\\) is the minimum distance (assuming some metric) between any two labels of Fock states corresponding to different code basis states. For a single mode, \\(d\\) is the minimum absolute value of the difference between any two Fock-state labels; such codes can detect up to \\(d-1\\) loss events. Multimode distances can be defined analogously; see, e.g., Chuang-Leung-Yamamoto codes.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Fock-state code distance is a natural extension of Hamming distance between binary strings.\n\nFock-state code whose codewords are finite superpositions of Fock states with maximum occupation \\(N\\) can be mapped into a qubit code with \\(n\\geq\\log_2 N\\) by performing a binary expansion of the Fock-state labels \\(n\\) and treating each binary digit as an index for a qubit state. Pauli operators for the constituent qubits can be expressed in terms of bosonic raising and lowering operators . However, noise models for the two code families induce different notions of locality and thus qualitatively different physical interpretations .", "_type": "ecc", "_page_id": "c_fock_state", "_href": "c/fock_state"}, "c_group_quantum": {"name": "Group-based quantum code", "description": "Encodes a logical Hilbert space, finite- or infinite-dimensional, into a physical Hilbert space of \\(\\ell^2\\)-normalizable functions on a second-countable unimodular group. For \\(K\\)-dimensional logical subspace and for groups \\(G^{\\times n}\\), can be denoted as \\(((n,K))_G\\). When the logical subspace is the Hilbert space of \\(\\ell^2\\)-normalizable functions on \\(G^{\\times k}\\), can be denoted as \\([[n,k]]_G\\). Ideal codewords may not be normalizable, depending on whether \\(G\\) is continuous and/or noncompact, so approximate versions have to be constructed.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Group quantum codes whose physical spaces are constructed using finite groups are finite-dimensional.\n\nGroup quantum codes whose physical spaces are constructed using modular-integer groups are modular-qudit codes.\n\nGroup quantum codes whose physical spaces are constructed using the group of the reals \\(\\mathbb{R}\\) under addition are bosonic codes.", "_type": "ecc", "_page_id": "c_group_quantum", "_href": "c/group_quantum"}, "c_rotor_gkp": {"name": "Rotor GKP code", "description": "GKP code protecting against small angular position and momentum shifts of a planar rotor.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "GKP (rotor GKP) codes protect against shifts in linear (angular) degrees of freedom.", "_type": "ecc", "_page_id": "c_rotor_gkp", "_href": "c/rotor_gkp"}, "c_molecular": {"name": "Molecular code", "description": "Encodes finite-dimensional Hilbert space into the Hilbert space of \\(\\ell^2\\)-normalizable functions on the group \\(SO_3\\). Construction is based on nested subgroups \\(H\\subset K \\subset SO_3\\), where \\(H,K\\) are finite. The \\(|K|/|H|\\)-dimensional logical subspace is spanned by basis states that are equal superpositions of elements of cosets of \\(H\\) in \\(K\\).", "protection": "Protects against generalized bit-flip errors \\(g\\in SO_3\\) that are inside the fundamental domain of \\(G/K\\). Protection against phase-flip errors determined by branching rules of irreps of \\(G\\) into those of \\(K\\), and further into those of \\(H\\).", "realizations": "", "notes": "Physical space characterizes orientations of a rigid body in 3D, which correspond to rotational states of an asymmetric molecule.", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_molecular", "_href": "c/molecular"}, "c_quantum_double": {"name": "Quantum-double code", "description": "A family of topological codes, defined by a finite group \\( G \\),  whose generators are few-body operators associated to the stars and plaquettes, respectively, of a tessellation of a two-dimensional surface (with a qudit of dimension \\( |G| \\) located at each edge of the tesselation).\nThe physical Hilbert space has dimension \\( |G|^E  \\), where \\( E \\) is the number of  edges in the tessellation. The dimension of the code space is the number of orbits of the conjugation action of \\( G \\) on \\( \\text{Hom}(\\pi_1(\\Sigma),G) \\),  the set of group homomorphisms from the fundamental group of the surface \\( \\Sigma \\) into the finite group \\( G \\) . When \\( G \\) is abelian, the formula for the dimension simplifies to \\( |G|^{2g} \\), where \\( g \\) is the genus of the surface \\( \\Sigma \\).\nThe codespace is the ground-state subspace of the quantum double model Hamiltonian. For nonabelian groups, alternative constructions are possible, encoding information in the fusion space of the low-energy anyonic excitations of model . The fusion space of such nonabelian anyons has dimension greater than one, allowing for topological quantum computation of logical information stored in the fusion outcomes.", "protection": "Error-correcting properties established in Ref. . The code distance is the number of edges in the shortest non contractible cycle in the tesselation or dual tesselation  .", "realizations": "", "notes": "The \\( \\Phi, \\Lambda \\)  Decodoku game is based on the quantum double model for the group \\(S_3\\) of permutations on three letters.", "parent_detail": "Quantum-double models admit stabilizer-like \\(X\\)- and \\(Z\\)-type operators , and the codes can be formulated as group GKP codes.\n\nQuantum-double code Hamiltonians admit topological phases associated with finite groups \\(G\\).", "cousin_detail": "The quantum-double model with \\(G=\\mathbb{Z}_q\\) is the qudit surface code.", "_type": "ecc", "_page_id": "c_quantum_double", "_href": "c/quantum_double"}, "c_group_gkp": {"name": "Group GKP code", "description": "Group code whose construction is based on nested subgroups \\(H\\subset K \\subset G\\). Logical subspace is spanned by basis states that are equal superpositions of elements of cosets of \\(H\\) in \\(K\\), and can be finite- or infinite-dimensional. Extension of the GKP code construction.", "protection": "Protects against generalized bit-flip errors \\(g\\in G\\) that are inside the fundamental domain of \\(G/K\\). Protection against phase-flip errors determined by branching rules of irreps of \\(G\\) into those of \\(K\\), and further into those of \\(H\\).", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "The group-GKP construction encompasses all bosonic CSS codes. For example, a single-mode qubit GKP code corresponds to the \\(2\\mathbb{Z}\\subset\\mathbb{Z}\\subset\\mathbb{R}\\) group construction.\n\nAn \\(n\\)-qubit CSS code corresponds to the \\(C_1^\\perp \\subseteq C_2 \\subset \\mathbb{Z}_2^{\\times n}\\) group construction.", "_type": "ecc", "_page_id": "c_group_gkp", "_href": "c/group_gkp"}, "c_stab_3_1_2": {"name": "Three qutrit code", "description": "A \\([[3,1,2]]_3\\) prime-qudit CSS code with stabilizer generators \\(ZZZ\\) and \\(XXX\\). The code defines a quantum secret-sharing scheme and serves as a minimal model for the AdS/CFT holographic duality. The codewords are\n\\begin{align}\n  \\begin{split}\n    | \\overline{0} \\rangle &= \\frac{1}{\\sqrt{3}} (| 000 \\rangle + | 111 \\rangle + | 222 \\rangle) \\\\\n    | \\overline{1} \\rangle &= \\frac{1}{\\sqrt{3}} (| 012 \\rangle + | 120 \\rangle + | 201 \\rangle) \\\\\n    | \\overline{2} \\rangle &= \\frac{1}{\\sqrt{3}} (| 021 \\rangle + | 102 \\rangle + | 210 \\rangle)~.\n  \\end{split}\n\\end{align}\nThe elements in the superposition of each logical codeword are related to each other via cyclic permutations.", "protection": "Detects single qutrit errors and protects against a single-qutrit erasure. There does not exist a three-qubit code with analogous properties.\nThe code is an example of a \\( ((n = 3, k = 2)) \\) threshold scheme where a secret (the quantum information) is split into \\( n \\) shares and can be reconstructed by \\( k \\) pieces.\nThey key property of this code is that the reduced density matrix of any single qutrit is maximally mixed, meaning no information can be extracted from that qutrit. Therefore, a single qutrit tells you nothing about the encoded message, but access to any two pairs of qutrits will reveal the secret.", "realizations": "", "notes": "Connections to Ads/CFT from the perspetive of how arbitrary operators are encoded into the logical space. This encoding is analagous and helps explain why operators acting on the bulk are protected against localized boundary errors .", "feature_rate": "\\(k/n = 1/3\\).", "feature_encoders": "In addition to thinking about the encoding of states, it is also interesting to look at the trasformation of operators from the physical space into the logical space. Due to the unique structure and recovery protocol of the three qutrit code, the representation of a logical operator \\( \\overline{O} \\) is not unique. Instead, \\( \\overline{O} \\) can be constructed from unitary matricies with support on only two out of the three qutrits. Therefore, the logical operator has valid representations constructed from support on different sets of two qutrits. This operator construction is directly analogous to the construction of operators in the bulk (at the center) of the AdS\\(_3\\)-Rindler reconstruction. The three-qutrit code can then be used to describe how these local bulk operators are protected against localized boundary errors .\n\nThis construction is related to the cleaning lemma , which was introduced in the context of constructing self-correcting quantum memories from stabilizer codes with geometrically-local generators. In this lemma, subspaces can be cleaned out by removing operators with support on a subset of qutrits.", "feature_decoders": "The quantum information (the secret) can be recovered from a unitary transformation acting on only two qutrits, \\( U_{ij} \\otimes I \\), where \\(U_{ij}\\) acts on qutrits \\(i,j\\) and \\(I\\) is the identity on the remaining qutrit. By the cyclic structure of the codewords, this unitary transformation performs a permutation that recovers the information and stores it in one of the two qutrits involved in recovery.", "parent_detail": "Smallest single-erasure correcting qudit code for \\(q>2\\).", "cousin_detail": "Three-qutrit code defines a minimal secret-sharing scheme  that is substantially generalized by approximate secret-sharing codes.\n\nThree-qutrit code is a minimal model for holography .", "_type": "ecc", "_page_id": "c_stab_3_1_2", "_href": "c/stab_3_1_2"}, "c_frobenius": {"name": "Frobenius code", "description": "Let \\(C\\) be a quantum cyclic code on \\(n\\) prime-dimensional qudits. \\(C\\) is a Frobenius code if there exists a positive integer \\(t\\) such that \\(n\\) divides \\(p^t +1\\).", "protection": "Protects against Pauli noise.", "realizations": "", "notes": "Frobenius codes that are also stabilizer codes have been completely classified. No such codes exist when \\(t\\) is odd. All such codes with even \\(t\\) can be directly constructed.", "feature_decoders": "Adapted from the Berlekamp decoding algorithm for classical BCH codes. There exists a polynomial time quantum algorithm to correct errors of weight at most \\(\\tau\\), where \\(\\delta=2\\tau+1\\) is the BCH distance of the code .", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_frobenius", "_href": "c/frobenius"}, "c_qudit_stabilizer": {"name": "Modular-qudit stabilizer code", "description": "An \\(((n,K,d))_q\\) modular-qudit code whose logical subspace is the joint \\(+1\\) eigenspace of a set of \\(|{\\mathsf{S}}|\\) commuting qudit Pauli operators forming the code''s stabilizer group \\({\\mathsf{S}}\\), which cannot contain \\(e^{i \\phi} I\\) for any \\(\\phi \\neq 0\\). The distance \\(d\\) is the minimum weight of a qudit Pauli string that implements a nontrivial logical operation on the code. The code can be represented by a stabilizer generator matrix \\(H=(H_X|H_Z)\\), where each row \\((h_X|h_Z)\\) is the \\(q\\)-ary symplectic representation of a stabilizer generator.\nA modular-qudit stabilizer code encoding an integer number of qudits (\\(K=q^k\\)) is denoted as \\([[n,k]]_{q}\\) or \\([[n,k,d]]_{q}\\). For composite \\(q\\), such codes need not encode an integer number of qudits, with \\(K=q^n/|\\mathsf{S}|\\) . This is because \\(|{\\mathsf{S}}|\\) need not be a power of \\(q\\), as group generators may have different orders. Prime-qudit stabilizer codes, where \\(q=p\\) for some prime \\(p\\), do not suffer from this issue and encode \\(n-k\\) logical qudits, with \\(K=p^{n-k}\\).", "protection": "Detects errors on up to \\(d-1\\) qudits, and corrects erasure errors on up to \\(d-1\\) qudits. More generally, define the normalizer \\(\\mathsf{N(S)}\\) of \\(\\mathsf{S}\\) to be the set of all operators that commute with all \\(S\\in\\mathsf{S}\\). A stabilizer code can correct a Pauli error set \\({\\mathcal{E}}\\) if and only if \\(E^\\dagger F \\notin \\mathsf{N(S)}\\setminus \\mathsf{S}\\) for all \\(E,F \\in {\\mathcal{E}}\\).", "realizations": "", "notes": "A standardized definition of the qudit stabilizer group is developed in .", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_qudit_stabilizer", "_href": "c/qudit_stabilizer"}, "c_polynomial": {"name": "Prime-qudit polynomial code (QPyC)", "description": "Also called quantum Reed-Solomon code. An \\([[n,k,n-k+1]]_p\\) (with prime \\(p>n\\)) prime-qudit CSS code constructed using two Reed-Solomon codes over \\(GF(p)=\\mathbb{Z}_p\\). Let \\(\\{\\alpha_1,\\cdots,\\alpha_n\\}\\) be \\(n\\) distinct nonzero elements of \\(\\mathbb{Z}_p\\), and let \\(g\\) be a number satisfying \\(0\\leq k \\leq g < n\\). Then, define degree-\\(g\\) polynomials\n\\begin{align}\n  f_{\\mu\\cup c}\\left(x\\right)=\\mu_{0}+\\mu_{1}x+\\cdots+\\mu_{k-1}x^{k-1}+c_{k}x^{k}+\\cdots+c_{g}x^{g}\\,,\n\\end{align}\nwhere the first \\(k\\) coefficients are indexed by the coefficient vector \\(\\mu\\in\\mathbb{Z}_p^{\\times k}\\), and the remaining coefficients are indexed by the vector \\(c\\in\\mathbb{Z}_p^{\\times (g+1-k)}\\). Logical states, labeled by \\(\\mu\\), are superpositions of canonical basis states whose \\(i\\)th bit is \\(f_{\\mu\\cup c}\\), evaluated at \\(\\alpha_i\\) and summed over all possible vectors \\(c\\),\n\\begin{align}\n  |\\overline{\\mu}\\rangle=\\sum_{c\\in\\mathbb{Z}_{p}^{\\times(g+1-k)}}|f_{\\mu\\cup c}(\\alpha_{1}),|f_{\\mu\\cup c}(\\alpha_{2}),\\cdots,|f_{\\mu\\cup c}(\\alpha_{n})\\rangle.\n\\end{align}", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Polynomial codes are CSS codes constructed from Reed-Solomon codes.\n\n\n\nA polynomial code is a quantum MDS code when \\(n-k_1=k_1-k_2\\).", "_type": "ecc", "_page_id": "c_polynomial", "_href": "c/polynomial"}, "c_qudit_surface": {"name": "Qudit surface code", "description": "A family of stabilizer codes whose generators are few-body \\(X\\)-type and \\(Z\\)-type Pauli strings associated to the stars and plaquettes, respectively, of a tessellation of a two-dimensional surface (with a qudit located at each edge of the tesselation). The code has \\( n=E \\) many physical qudits, where \\( E \\) is the number of edges of the tesselation, and \\( k=2g \\) many logical qudits, where \\( g \\) is the genus of the surface.", "protection": "When defined on an \\(L\\times L\\) square tiling of the torus, protects against \\(L\\) errors. More generally, the code distance is the number of edges in the shortest non contractible cycle in the tesselation or dual tesselation  .", "realizations": "", "notes": "The simplest Decodoku game is based on the qudit surface code with \\( q=10\\).", "parent_detail": "Plaquette and star operators are stabilizer generators.\n\nQudit surface code Hamiltonians admit topological phases associated with \\(\\mathbb{Z}_q\\) . On the other hand, translation-invariant 2D prime-qudit topological stabilizer codes are equivalent to a finite number of copies of the qudit surface code stabilizer group via a local constant-depth Clifford circuit .", "cousin_detail": "The qudit surface code with \\(q=2\\) is the surface code.\n\nTranslation-invariant 2D prime-qudit topological stabilizer codes are equivalent to a finite number of copies of the qudit surface code stabilizer group via a local constant-depth Clifford circuit .", "_type": "ecc", "_page_id": "c_qudit_surface", "_href": "c/qudit_surface"}, "c_qudits_into_qudits": {"name": "Modular-qudit code", "description": "Encodes \\(K\\)-dimensional Hilbert space into a \\(q^n\\)-dimensional (\\(n\\)-qudit) Hilbert space, with canonical qudit states \\(|k\\rangle\\) labeled by elements \\(k\\) of the group \\(\\mathbb{Z}_q\\) of integers modulo \\(q\\). Usually denoted as \\(((n,K))_q\\) or \\(((n,K,d))_q\\), whenever the code''s distance \\(d\\) is defined, and with \\(q=p\\) when the dimension is prime.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_qudits_into_qudits", "_href": "c/qudits_into_qudits"}, "c_qudit_css": {"name": "Modular-qudit CSS code", "description": "An \\(((n,K,d))_q\\) modular-qudit stabilizer code admitting a set of stabilizer generators that\nare either \\(Z\\)-type or \\(X\\)-type Pauli strings.\nThe stabilizer generator matrix, taking values from \\(\\mathbb{Z}_q\\), is of the form\n\\begin{align}\nH=\\begin{pmatrix}0 & H_{Z}\\\\\nH_{X} & 0\n\\end{pmatrix}~.\n\\label{eq:parity}\n\\end{align}\nFor composite \\(q\\), such codes need not encode an integer number of qudits. For prime \\(q=p\\), properties reminiscent of qubit CSS codes are restored: encoding is based on two related \\(p\\)-ary linear codes, an \\([n,k_X,d_X]_p \\) code \\(C_X\\) and \\([n,k_Z,d_Z]_p \\) code \\(C_Z\\),\nsatisfying \\(C_X^\\perp \\subseteq C_Z\\). The resulting CSS code has \\(k=k_X+k_Z-n\\) logical qubits and distance \\(d\\geq\\min\\{d_X,d_Z\\}\\).\nThe \\(H_X\\) (\\(H_Z\\)) block of \\(H\\) \\eqref{eq:parity} is the parity-check matrix of the code \\(C_X\\) (\\(C_Z\\)).\nThe requirement \\(C_X^\\perp \\subseteq C_Z\\) guarantees that the \\(X\\)-stabilizers commute with the \\(Z\\)-stabilizers of associated with \\(H_Z\\).\nThe codewords are\n\\begin{align}\n|\\gamma + C_Z^\\perp \\rangle = \\sum_{\\eta \\in C_Z^\\perp} |\\gamma + \\eta\\rangle,\n\\end{align}\nfor \\(\\gamma \\in C_X\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Extension of CSS codes to modular-integer qudits.", "_type": "ecc", "_page_id": "c_qudit_css", "_href": "c/qudit_css"}, "c_skew-cyclic_galois_css": {"name": "Skew-cyclic CSS code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Skew-cyclic CSS codes are constructed from classical skew-cylic codes.", "_type": "ecc", "_page_id": "c_skew-cyclic_galois_css", "_href": "c/skew-cyclic_galois_css"}, "c_galois_stabilizer": {"name": "Galois-qudit stabilizer code", "description": "An \\(((n,K,d))_{GF(q)}\\) Galois-qudit code whose logical subspace is the joint \\(+1\\) eigenspace of a set of \\(|{\\mathsf{S}}|\\) commuting Galois-qudit Pauli operators forming the code's stabilizer group \\(\\mathsf{S}\\), which cannot contain \\(e^{i\\phi}I\\) for any \\(\\phi \\neq 0\\). The distance \\(d\\) is the minimum weight of a Galois-qudit Pauli string that implements a nontrivial logical operation on the code. The code can be represented by a stabilizer generator matrix \\(H=(H_X|H_Z)\\), where each row \\((h_X|h_Z)\\) is the \\(GF(q)\\)-valued symplectic representation of a stabilizer generator.\nA Galois-qudit stabilizer code encoding an integer number of qudits (\\(K=q^k\\)) is denoted as \\([[n,k]]_{GF(q)}\\) or \\([[n,k,d]]_{GF(q)}\\). This notation differentiates between Galois-qudit and modular-qudit stabilizer codes, although the same notation, \\([[n,k,d]]_q\\), is usually used for both. Galois-qudit stabilizer codes need not encode an integer number of qudits, with \\(K=q^{n-\\frac{r}{m}}\\), where \\(r\\) is the number of generators of the stabilizer group, and \\(q=p^m\\) given prime \\(p\\) for all Galois qudits.", "protection": "Detects errors on up to \\(d-1\\) qudits, and corrects erasure errors on up to \\(d-1\\) qudits. Corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qudits.", "realizations": "", "notes": "", "feature_general_gates": "As opposed to modular qudits for composite \\(q\\), Galois qudits inherit most of the properties of the prime-qudit Clifford group due to the correspondence between a \\(q=p^m\\) Galois qudit and \\(m\\) prime qudits of dimension \\(p\\) .", "parent_detail": "", "cousin_detail": "Recalling that \\(q=p^m\\), Galois-qudit stabilizer codes can also be treated as prime-qudit stabilizer codes on \\(mn\\) qudits, giving \\(k=nm-r\\) . The case \\(m=1\\) reduces to conventional prime-qudit stabilizer codes on \\(n\\) qudits.", "_type": "ecc", "_page_id": "c_galois_stabilizer", "_href": "c/galois_stabilizer"}, "c_galois_true_stabilizer": {"name": "Galois-qudit true stabilizer code", "description": "Also called a linear stabilizer code. A \\([[n,k,d]]_{GF(q)}\\) stabilizer code whose stabilizer's symplectic representation forms a linear subspace. In other words, the set of \\(q\\)-ary vectors representing the stabilizer group is closed under both addition and multiplication by elements of \\(GF(q)\\). In contrast, Galois-qudit stabilizer codes admit sets of vectors that are closed under addition only.\nThe number of generators \\(r\\) for a true stabilizer code is a multiple of \\(m\\) (recall that \\(q=p^m\\) for Galois qudits). As a result, the number \\(k=n-r/m\\) of logical qudits is an integer.", "protection": "Detects errors on up to \\(d-1\\) qudits, and corrects erasure errors on up to \\(d-1\\) qudits.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "A true Galois-qudit stabilizer code is the closest quantum analogue of a linear code over \\(GF(q)\\) because the \\(q\\)-ary vectors defining each code form a linear subspace.", "_type": "ecc", "_page_id": "c_galois_true_stabilizer", "_href": "c/galois_true_stabilizer"}, "c_binary_quantum_goppa": {"name": "Binary quantum Goppa code", "description": "Also known as a quantum AG code. Binary quantum Goppa codes are a family of \\( [[n,k,d]]_{GF(q)} \\) CSS codes for \\( q=2^m \\), generated using classical Goppa codes.\nLet \\( F/GF(q) \\) be an algebraic function field of one variable, \\(\\sigma \\) be an automorphism of order 2\nof \\(F\\) which leaves \\(GF(q)\\) invariant, and \\(P_1, \\cdots, P_n \\) be pairwise distinct places of degree one such that \\( \\sigma P_i = P_j\\) for all\n\\(i,j = 1, \\cdots, n\\). A place \\( P_i \\) of \\( F/ GF(q) \\) is the unique maximal ideal of a discrete valuation ring of the function field. Let \\( \\nu \\) be a  differential\nthat satisfies the properties guaranteed by  the strong approximation theorem of discrete evaluations. Let \\(G\\) be a divisor such that \\( \\sigma G = G \\) and the\ndiscrete valuation corresponding to place \\(P_i \\) of \\(G\\) and the discrete valuation corresponding to place \\(\\sigma P_i \\) of \\(G\\) are both 0 for all \\(i\\). Then we can define\na code \\( C(G)  = \\{ f(P_1), \\cdots, f(P_n), f(\\sigma P_1), \\cdots , f(\\sigma P_n) | f \\in \\mathcal{L}(G)\\} \\subset GF(q^{2n})\\) and\na code \\(C(H)\\) where \\(H = (P_1 + \\cdots + P_n + \\sigma P_1 + \\cdots + \\sigma P_n) - G + \\nu \\). Then the dual of \\(C(G)\\) with respect to the weighted symplectic inner\nproduct with weights \\(s_i\\) on \\( GF(q^n) \\) is equivalent to \\(C(H)\\). Therefore, the orthogonal code of \\(C(G)\\) is generated by \\(H\\). Using these properties and the assumption\nthat \\(H\\) is a subgroup of \\(G\\), we can construct a classical Goppa code \\(C(D,G)\\), where \\(D\\) is the sum of all \\(P_i\\). Using \\(C(D,G)\\), we can construct a \\([[n,k,d]]_{GF(q)}\\) quantum stabilizer code such that\n\\(k  = \\text{dim} G - \\text{dim}(G-P_1 - \\cdots - P_n - \\sigma P_1 - \\cdots  - \\sigma P_n) - n~.\\)", "protection": "Protects against weight t errors where \\( 0 < t \\leq  \\lfloor \\frac{d^*-g-1}{2} \\rfloor \\) where \\( d^* = \\text{deg} G + 2 -2g \\) and \\(g\\) is the genus of the function field and \\(d \\geq n - \\lfloor \\frac{deg G}{2} \\rfloor\\).", "realizations": "", "notes": "", "feature_encoders": "Encoding defined in Matsumoto  uses a technique from Ashikhmin and Knill  to encode quantum stabilizer codes.", "feature_decoders": "Farran algorithm .", "parent_detail": "Goppa codes can be realized in the CSS code construction .", "cousin_detail": "Classical Goppa codes are used to construct their quantum versions.", "_type": "ecc", "_page_id": "c_binary_quantum_goppa", "_href": "c/binary_quantum_goppa"}, "c_galois_into_galois": {"name": "Galois-qudit code", "description": "Encodes \\(K\\)-dimensional Hilbert space into a \\(q^n\\)-dimensional (\\(n\\)-qudit) Hilbert space, with canonical qudit states \\(|k\\rangle\\) labeled by elements \\(k\\) of the Galois field \\(GF(q)\\) and with \\(q\\) being a power of a prime \\(p\\). A Galois field can be thought of as a vector space whose basis vectors are the \\(m\\) roots of some polynomial and whose coefficients (i.e., field) are \\(p\\)th roots of unity. Codes can be denoted as \\(((n,K))_{GF(q)}\\) or \\(((n,K,d))_{GF(q)}\\), whenever the code's distance \\(d\\) is defined. This notation differentiates between Galois-qudit and modular-qudit codes, although the same notation, \\(((n,k,d))_q\\), is usually used for both.", "protection": "", "realizations": "", "notes": "Introduction to Galois qudits by Gottesman.", "parent_detail": "", "cousin_detail": "A Galois qudit for \\(q=p^m\\) can be decomposed into a Kronecker product of \\(m\\) modular qudits ; see Sec. 5.3 of Ref. . The two coincide when \\(q\\) is prime, and reduce to qubits when \\(q=2\\). However, Pauli matrices for the two types of qudits are defined differently.", "_type": "ecc", "_page_id": "c_galois_into_galois", "_href": "c/galois_into_galois"}, "c_quantum_secret_sharing": {"name": "Approximate secret-sharing code", "description": "A family of \\( [[n,k,d]]_{GF(q)} \\) CSS codes approximately correcting errors on up to \\(\\lfloor (n-1)/2 \\rfloor\\) qubits, i.e., with approximate distance approaching the no-cloning bound \\(n/2\\). Constructed using a non-degenerate CSS code, such as a polynomial quantum code, and a classical authentication scheme. The code can be viewed as an \\(t\\)-error tolerant secret sharing scheme. Since the code yields a small logical subspace using large registers that contain both classical and quantum information, it is not useful for practical error correction problems, but instead demonstrates the power of approximate quantum error correction.", "protection": "Corrects up to \\(\\lfloor (n-1)/2 \\rfloor\\) errors with fidelity exponentially lose to 1.", "realizations": "", "notes": "", "feature_encoders": "Uses a quantum authentication scheme, which is a keyed system in which a valid state has high fidelity, and a classical secret-sharing scheme.", "feature_decoders": "Decoding is analagous to reconstruction in a secret sharing scheme and is done in polynomial time. The only required operations are verification of quantum authentication, which is a pair of polynomial-time quantum algorithms that check if the fidelity of the received state is close to 1, and erasure correction for a stabilizer code, which involves solving a system of linear equations.", "parent_detail": "The code required to construct this code must be a non-degenerate Galois-qubit CSS code.", "cousin_detail": "Secret-sharing codes approximately correct errors on up to \\(\\lfloor (n-1)/2 \\rfloor\\) errors.\n\nPolynomial codes can be used for a specific construction of this code.\n\nThe classical information in this code is encoded using a Reed-Solomon code.", "_type": "ecc", "_page_id": "c_quantum_secret_sharing", "_href": "c/quantum_secret_sharing"}, "c_galois_css": {"name": "Galois-qudit CSS code", "description": "An \\([[n,k,d]]_{GF(q)} \\) Galois-qudit true stabilizer code admitting a set of stabilizer generators that\nare either \\(Z\\)-type or \\(X\\)-type Galois-qudit Pauli strings.\nThe stabilizer generator matrix, taking values from \\(GF(q)\\), is of the form\n\\begin{align}\nH=\\begin{pmatrix}0 & H_{Z}\\\\\nH_{X} & 0\n\\end{pmatrix}~.\n\\label{eq:parity}\n\\end{align}\nEncoding is based on two related \\(q\\)-ary linear codes,\nan \\([n,k_X,d_X]_q \\) code \\(C_X\\) and \\([n,k_Z,d_Z]_q \\) code \\(C_Z\\),\nsatisfying \\(C_X^\\perp \\subseteq C_Z\\).\nThe resulting CSS code has \\(k=k_X+k_Z-n\\) logical qubits and distance \\(d\\geq\\min\\{d_X,d_Z\\}\\).\nThe \\(H_X\\) (\\(H_Z\\)) block of \\(H\\) \\eqref{eq:parity} is the parity-check matrix of the code \\(C_X\\) (\\(C_Z\\)).\nThe requirement \\(C_X^\\perp \\subseteq C_Z\\) guarantees that the \\(X\\)-stabilizers,\ndefined in the symplectic representation as rows of \\(H_X\\),\ncommute with the \\(Z\\)-stabilizers of associated with \\(H_Z\\).\nThe codewords are\n\\begin{align}\n|\\gamma + C_Z^\\perp \\rangle = \\sum_{\\eta \\in C_Z^\\perp} |\\gamma + \\eta\\rangle,\n\\end{align}\nfor \\(\\gamma \\in C_X\\).", "protection": "Detects errors on \\(d-1\\) qubits, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) qubits.", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Extension of qubit CSS codes to Galois qudits.", "_type": "ecc", "_page_id": "c_galois_css", "_href": "c/galois_css"}, "c_galois_polynomial": {"name": "Galois-qudit polynomial code (QPyC)", "description": "Also called quantum Reed-Solomon code. An \\([[n,k,n-k+1]]_{GF(q)}\\) (with \\(q>n\\)) Galois-qudit CSS code constructed using two Reed-Solomon codes over \\(GF(q)\\). Let \\(C_1\\) be a \\([n,k_1,d_1]_q\\) Reed-Solomon code and \\(C_2^\\perp\\) be a \\([n,k_2,d_2]_q\\) Reed-Solomon code, modified such that \\(C_2^\\perp \\subseteq C_1\\) and \\(0\\le k_2 \\le k_1 \\le n\\). Then, a polynomial code is a non-degenerate \\([[n,k_2,d]]_{GF(q)}\\) Galois-qudit CSS code with \\(d=\\min(n-k_1+1,k_1-k_2+1)\\). The polynomial code is the span of the basis codewords over GF(\\(q\\)) \\begin{align} |\\overline{\\beta_0,\\cdots,\\beta_{k_2-1}}\\rangle = \\sum_{(\\beta_{k_2},\\cdots,\\beta_{k_1-1})\\in GF(q) } \\bigotimes_{i=1}^{n} \\left|\\sum_{j=0}^{k_1-1} \\beta_j \\alpha_i^j \\right\\rangle,\\end{align} where \\((\\alpha_1, \\cdots, \\alpha_n)\\) are \\(n\\) distinct points chosen for code \\(C_1\\) from \\(GF(q)\\setminus \\{0\\}\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Polynomial codes can be defined for modular qudits of prime dimension or, more generally, for Galois qudits.\n\nPolynomial codes are CSS codes constructed from Reed-Solomon codes.\n\n\n\nA polynomial code is a quantum MDS code when \\(n-k_1=k_1-k_2\\).", "_type": "ecc", "_page_id": "c_galois_polynomial", "_href": "c/galois_polynomial"}, "c_distance_balanced": {"name": "Distance-balanced code", "description": "CSS stabilizer code constructed from another CSS code using a distance-balancing procedure The initial code is said to be unbalanced, i.e., tailored to noise biased toward either bit- or phase-flip errors.", "protection": "", "realizations": "", "notes": "", "parent_detail": "\n\nDistance-balancing procedure can yield QLDPC codes; see Thm. 1 in Ref. .", "cousin_detail": "", "_type": "ecc", "_page_id": "c_distance_balanced", "_href": "c/distance_balanced"}, "c_dynamic_gen": {"name": "Dynamically-generated quantum error-correcting code", "description": "Code whose natural definition is in terms of a many-body scaling limit of a local dynamical process. Such processes update the code structure and can include random unitary evolution or non-commuting projective measurements.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_dynamic_gen", "_href": "c/dynamic_gen"}, "c_quantum_concatenated": {"name": "Concatenated code", "description": "A concatenated code is a combination of two codes, an inner code \\(C\\) and an outer code \\(C^\\prime\\), where the physical subspace used for the outer code consists of the logical subspace of the inner code. In other words, first one encodes in the outer code \\(C^\\prime\\), and then one encodes each of the physical registers of \\(C^\\prime\\) in an inner code \\(C\\).", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_quantum_concatenated", "_href": "c/quantum_concatenated"}, "c_quantum_cyclic": {"name": "Quantum cyclic code", "description": "A code \\(C\\) constructed in a physical space consisting of a tensor product of \\(n\\) subsystems (e.g., qubits) is cyclic if a cyclic permutation of the subsystems leaves the code subspace invariant.", "protection": "Cyclic symmetry guarantees that if a single subsystem is protected against some noise, then all other subsystems are also.", "realizations": "", "notes": "Many examples have been found by computer algebra programs. Ref.  give examples of \\([[17,1,7]]\\) and \\([[17,9,3]]\\) quantum cyclic codes.", "feature_decoders": "Adapted from the Berlekamp decoding algorithm for classical BCH codes .", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_quantum_cyclic", "_href": "c/quantum_cyclic"}, "c_topological": {"name": "Topological code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "Codespace is either the ground-state or low-energy subspace of a geometrically local Hamiltonian admitting a topological phase.", "cousin_detail": "", "_type": "ecc", "_page_id": "c_topological", "_href": "c/topological"}, "c_random_circuit": {"name": "Random-circuit code", "description": "Code whose encoding is naturally constructed by randomly sampling from a large set of quantum circuits.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_random_circuit", "_href": "c/random_circuit"}, "c_approximate_qecc": {"name": "Approximate quantum code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "", "_type": "ecc", "_page_id": "c_approximate_qecc", "_href": "c/approximate_qecc"}, "c_qldpc": {"name": "Quantum low-density parity-check (QLDPC) code", "description": "Family of \\([[n,k,d]]\\) stabilizer codes for which the number of sites (either qubit or qudit) participating in each stabilizer generator and the number of stabilizer generators that each site participates in are both bounded by a constant as \\(n\\to\\infty\\).\nStrictly speaking, the term parity check describes only bitwise qubit error syndromes. Nevertheless, qudit codes satisfying the above criteria are often called QLDPC codes.", "protection": "Detects errors on \\(d-1\\) sites, corrects errors on \\(\\left\\lfloor (d-1)/2 \\right\\rfloor\\) sites. Asymptotic scaling of \\(k\\) and \\(d\\) with \\(n\\) is often of interest, and this depends heavily on the code construction.\nA good quantum LDPC code family satisfies \\(k \\in \\theta(n) \\) and \\(d \\in \\theta(n)\\) , and the first examples of good qubit codes are a family of lifted-product codes.\nFor qubits, a geometrically local LDPC code is an LDPC code where the qubits involved in any syndrome bit are contained in a fixed volume that does not scale with \\(n\\); such codes are limited to having \\(d=O(n^{1-1/D})\\) for \\(D\\)-dimensional lattice geometries .", "realizations": "", "notes": "Links to code tables of notable QLDPC codes .\n\nReviews of QLDPC codes provided in Refs. .", "feature_threshold": "Quantum LDPC codes with a constant encoding rate can reduce the overhead of fault-tolerant quantum computation to be constant .", "parent_detail": "", "cousin_detail": "\n\nTopological codes are not generally defined using Pauli strings. However, for appropriate tesselations, the codespace forms a ground-state subspace of a geometrically local Hamiltonain. In this sense, topological codes are QLDPC codes. On the other hand, chain complexes describing some QLDPC codes can be 'lifted' into higher-dimensional manifolds admitting some notion of geometric locality . This opens up the possibility that some QLDPC codes, despite not being geometrically local, can in fact be associated with a geometrically local theory described by a category.\n\nQLDPC codes can arise form a dynamical process .", "_type": "ecc", "_page_id": "c_qldpc", "_href": "c/qldpc"}, "c_holographic": {"name": "Holographic code", "description": "A code whose encoding isometry serves to model aspects of the AdS/CFT holographic duality. Encodes operators in the bulk of the Anti de Sitter (AdS) space, represented by logical qudits, into operators on the boundary of the corresponding Conformal Field Theory (CFT), represented by physical qudits. Encoding can often be represented by a tensor network associated with a tiling of hyperbolic space. See Defn 4.3 of Ref.  for a technical formulation.\nTypically, the encoding isometry \\(U\\) obeys the entanglement-wedge reconstruction condition, which states that for any boundary region \\(R\\), any bulk operator \\(O\\) localized to the entanglement wedge of \\(R\\) must be implementable by some boundary operator \\(\\tilde{O}\\) localized to \\(R\\). Formally, \\(UO = \\tilde{O}U\\) and \\([\\tilde{O},UU^\\dagger] = 0\\). The entanglement wedge is the space enclosed within the Ryu\u2013Takayanagi surface in the bulk (minimal surface) with boundary \\(R\\).", "protection": "Protects against erasure errors on the boundary. Error-correction properties are often stated in the Heisenberg picture, i.e., in terms of which logical operators can be reconstructed after erasures. Specifically, bulk operators outside the entanglement wedges of the erased boundary operators can be reconstructed using the remaining boundary operators. However, the protection can be nontrivial, and may only apply to a subalgebra of bulk operators .", "realizations": "", "notes": "All Boundary global symmetries must be dual to bulk gauge symmetries, and vice versa .", "feature_transversal_gates": "There exist holographic approximate codes with arbitrary transversal gate sets for any compact Lie group .", "feature_threshold": "The ideal holographic code (perfect representation of AdS/CFT) should be able to protect a central bulk operator against erasures of half of the physical qubits on the boundary, in line with AdS-Rindler reconstruction .", "parent_detail": "Properties of holographic codes are often quantified in the Heisenberg picture, i.e., in terms of operator algebras .", "cousin_detail": "", "_type": "ecc", "_page_id": "c_holographic", "_href": "c/holographic"}, "c_fracton": {"name": "Fracton code", "description": "A code whose codewords make up the ground-state space of a fracton-phase Hamiltonian.", "protection": "", "realizations": "", "notes": "", "parent_detail": "\n\nCodespace is the ground-state subspace of a geometrically local Hamiltonian admitting a fracton phase.\n\nFracton codes admit geometrically local stabilizer generators on a cubic lattice.", "cousin_detail": "Fracton phases can be understood as topological defect networks .", "_type": "ecc", "_page_id": "c_fracton", "_href": "c/fracton"}, "c_hamiltonian": {"name": "Hamiltonian-based code", "description": "Encoding corresponds to a set of energy eigenstates of a quantum-mechanical Hamiltonian. The codespace is typically a set of low-energy eigenstates or ground states, but can include subspaces of arbitrarily high energy. When the physical space is a tensor product of subsystems, the Hamiltonian is typically local, consisting of operators acting on a number of subsystems that is independent of the total number of subsystems (e.g., quantum LDPC codes). When the physical space is endowed with a geometry, the Hamiltonian is typically geometrically local, consisting of operators acting on subsystems that occupy a region whose size is independent of the number of subsystems (e.g., topological codes).", "protection": "Typically determined from the underlying physical properties of the Hamiltonian.", "realizations": "", "notes": "", "feature_encoders": "Lindbladian-based dissipative encoding can be constructed for a codespace that is the ground-state subspace of a frustration-free Hamiltonian .", "parent_detail": "", "cousin_detail": "Hamiltonian-based codes are not generally defined using Pauli strings. However, codes forming the ground-state subspace of a local Hamiltonain consisting of commuting terms are QLDPC codes in the sense that they satisfy the QLDPC locality requirements.", "_type": "ecc", "_page_id": "c_hamiltonian", "_href": "c/hamiltonian"}, "c_topological_abelian": {"name": "Abelian topological code", "description": "Code whose codewords realize topological order associated with an abelian group. Stub.", "protection": "", "realizations": "", "notes": "", "parent_detail": "\n\nAll abelian topological orders can be realized as modular-qudit stabilizer codes , and topological-code Hamiltonians are geometrically local for appropriate tesselations.", "cousin_detail": "All abelian topological orders can be realized as modular-qudit stabilizer codes .", "_type": "ecc", "_page_id": "c_topological_abelian", "_href": "c/topological_abelian"}, "c_fusion": {"name": "Fusion-based quantum computing (FBQC) code", "description": "Fusion Based Quantum Computing, or FBQC, describes a fault tolerant way to produce fusion networks, or large entangled states starting from small constant-sized entangled resource states along with destructive measurements called fusions. These large states can be produced asychronously in the fusion framework and can be used as resources, as in measurement-based quantum computation (MBQC), or as logical states of topological codes. The difference from ordinary MBQC is that error-correction is baked into the state-generation protocol.", "protection": "Protects against erasure, Pauli errors, photon loss, fusion failure from non-determinism, and faulty resource states. Redundancy in fusion outcomes is captured by the check operator group. Fusion measurement outcomes form a syndrome that allows to correct for Pauli errors. There is no physical error correction, and decoding output is simply used to update the Pauli frame.", "realizations": "", "notes": "", "feature_encoders": "Resource state generators, which produce small constant size cluster states, and Fusion measurements (Bell fusions).", "feature_general_gates": "Clifford gates by creating topological features such as boundaries, defects, or twists, which can be done by single qubit measurements.\n\nLogical gates can be performed by code deformation.\n\nNon Clifford gates by Magic-state injection\n\nLogical Clifford operations can be kept track of using the classical Pauli-frame register and need not be explicitly applied at the quantum level.", "feature_fault_tolerance": "Fusion networks are constructed in a fault tolerant way (as a stabilizer code), and they can be created in a way that naturally encodes topological fault tolerance.", "feature_threshold": "\\(11.98\\%\\) against erasure in fusion measurements.\n\n\\(1.07\\%\\) against Pauli error.\n\nIn linear optical systems, can tolerate \\(10.4\\%\\) probability of photon loss in each fusion.\n\n\\(43.2\\%\\) against fusion failure.", "parent_detail": "The resource states in FBQC are small stabilizer states, and after fusion measurements, the outputs are stabilizers (conditioned on measurement outcomes).", "cousin_detail": "Arbitrary topological codes can be created using FBQC, as can topological features such as defects and boundaries, by modifying fusion measurements or adding single qubit measurements.\n\nWhile FBQC is a general framework, an intended application to linear-optical quantum computing will likely utilize small Fock-state bosonic codes such as the dual-rail code.", "_type": "ecc", "_page_id": "c_fusion", "_href": "c/fusion"}, "c_quantum_perfect": {"name": "Perfect quantum code", "description": "A non-degenerate code constructed out of \\(q\\)-dimensional qudits and having parameters \\(((n,K,2t+1))\\) is perfect if \\(n\\), \\(K\\), \\(t\\), and \\(q\\) are such that the quantum Hamming bound\n\\begin{align}\n\\sum_{j=0}^{t}(q^2-1)^{j}{n \\choose j}\\leq q^{n}/K\n\\end{align}\nbecomes an equality. For example, for a qubit \\(q=2\\) code with one logical qubit (\\(K=2\\)) and \\(t=1\\), the bound becomes \\(3n+1 \\leq 2^{n-1}\\). The bound can be saturated only at certain \\(n\\).\nFor qubit codes with \\(K=2^k\\), one can work out an asymptotic Hamming bound in the large-\\(n,k,t\\) limit,\n\\begin{align}\n\\frac{k}{n}\\leq 1-\\frac{t}{n}\\log_{2}3-H(t/n),\n\\end{align}\nwhere \\(H\\) is the binary entropy function.", "protection": "Perfect codes have been classified. For qubits (\\(q=2\\)), the only codes are the stabilizer code family \\([[(4^r-1)/3, (4^r-1)/3 - 2r, 3]]\\) for \\(r \\geq 2\\) . For qudits, the family is parameterized by \\(K=q^{n-2r}\\) for \\(n=\\frac{q^{2r}-1}{q^{2}-1}\\) and \\(r \\geq 2\\); all codes correct a single error (\\(t=1\\)) . The trivial code (\\(k=n\\)) is also perfect.", "realizations": "", "notes": "", "feature_rate": "\\(k/n\\to 1\\) asymptotically with \\(n\\).", "parent_detail": "", "cousin_detail": "A classical (quantum) perfect code saturates the classical (quantum) Hamming bound.", "_type": "ecc", "_page_id": "c_quantum_perfect", "_href": "c/quantum_perfect"}, "c_quantum_mds": {"name": "Quantum maximum-distance-separable (MDS) code", "description": "An \\(((n,q^k,d))\\) code constructed out of \\(q\\)-dimensional qudits is an MDS code if parameters \\(n\\), \\(k\\), \\(d\\), and \\(q\\) are such that the quantum Singleton bound\n\\begin{align}\n2(d-1) \\leq n-k\n\\end{align}\nbecomes an equality.", "protection": "Given \\(n\\) and \\(k\\), MDS codes have the highest distance possible of all codes and so have the best possible error correction properties.", "realizations": "", "notes": "The \\([[5,1,3]]\\) code and \\([[n,n-2,2]]\\) codes, where \\(n\\) is even, are the only examples of MDS qubit codes.", "parent_detail": "", "cousin_detail": "\n\nQuantum MDS codes can be constructed through classical generalized Reed-Solomon codes .", "_type": "ecc", "_page_id": "c_quantum_mds", "_href": "c/quantum_mds"}, "c_fermions": {"name": "Fermionic code", "description": "Finite-dimensional quantum error-correcting code encoding a logical Hilbert space into a physical Fock space of fermionic modes. Codes are typically described using Majorana operators, which are linear combinations of fermionic creation and annihilation operators .", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "While the Majorana operator algebra is isomorphic to the qubit Pauli-operator algebra via the Jordan-Wigner transformation , codes based on the two algebras have different notions of locality and thus qualitatively different physical interpretations.\n\nBosonic (fermionic) codes are associated with bosonic (fermionic) degrees of freedom.", "_type": "ecc", "_page_id": "c_fermions", "_href": "c/fermions"}, "c_majorana_stab": {"name": "Majorana stabilizer code", "description": "Majorana fermion stabilizer codes are stabilizer codes whose stabilizers are products of an even number of Majorana fermion operators, analogous to Pauli strings for a traditional stabilizer code and referred to as Majorana stabilizers. The codespace is the mutual \\(+1\\) eigenspace of all Majorana stabilizers. In such systems, Majorana fermions may either be considered individually or paired into creation and annihilation operators for fermionic modes. Codes can be denoted as \\([[n,k,d]]_{f}\\) , where \\(n\\) is the number of fermionic modes.", "protection": "Detects products of Majorana operators with weight up to \\(d-1\\). Physically, protects against dephasing errors caused by coupling of fermion density to the environment and bit-flip errors caused by quasiparticle poisoning processes.", "realizations": "", "notes": "", "parent_detail": "\n\nThe Majorana stabilizer code is a stabilizer code whose stabilizers are composed of Majorana fermion operators. In addition, any \\([[n,k,d]]\\) stabilizer code can be mapped into a \\([[2n,k,2d]]_{f}\\) Majorana stabilizer code . However, Pauli- and Majorana-based stabilizer codes have different notions of locality  and are thus useful for different physical platforms.", "cousin_detail": "Classical weakly self-dual codes can be used to construct Majorana stabilizer codes . The direct relationship between the two codes follows from expressing the Majorana strings as binary vectors \u2013 akin to the binary symplectic representation \u2013 and observing that the binary stabilizer matrix \\(S\\) for such a Majorana stabilizer code satisfies \\(S\\cdot S^T=0\\) because it has commuting stabilizers, which is precisely the condition \\(G\\cdot G^T=0\\) on the generator matrix \\(G\\) of a weakly self-dual classical code. A weakly self-dual classical code \\(C\\) with parameters \\([2N,k,d]\\) yields a Majorana stabilizer code with parameters \\([[N,N-k,d^\\perp]]_f\\), where \\(d^\\perp\\) is the code distance of the dual code \\(C^\\perp\\).\n\nWhen constructing a Majorana stabilizer code from a weakly self-dual classical code with an odd number of bits and generator matrix \\(G\\), a more complex procedure must be applied to ensure that the fermion code has an even number of Majorana zero modes, and thus a physical Hilbert space . Rather than taking \\(G\\) to be the stabilizer matrix as in the even case, we take \\(G\\oplus G\\). This is a concatenation of classical codes as in the CSS construction and it yields a mapping \\([2N-1,k,d]\\rightarrow [[2N-1,2N-1-k,d^\\perp]]_f\\). This procedure may be further generalized by concatenating two different weakly self-dual classical codes with an odd number of bits, as is often done in the CSS construction.\n\nCyclic codes can be used to construct translation-invariant Majorana stabilizer codes, provided that they are also weakly self-dual .\n\nMajorana stabilizer codes can be constructed by weakly self-dual Reed-Muller codes . These codes have the additional property that the global fermion parity is fixed in the codespace. In this family of codes, logical measurements are reduced to parity measurements of some subset of Majorana fermions in the code.", "_type": "ecc", "_page_id": "c_majorana_stab", "_href": "c/majorana_stab"}, "c_turaev_viro": {"name": "Turaev-Viro code", "description": "Stub.", "protection": "", "realizations": "", "notes": "", "feature_general_gates": "Dehn twists and braiding-based gates developed in Refs. .", "parent_detail": "\n\nFor certain categories, Turaev-Viro codes can be realized using Levin-Wen model Hamiltonians .", "cousin_detail": "For certain categories, Turaev-Viro codes can be realized using Levin-Wen model Hamiltonians .", "_type": "ecc", "_page_id": "c_turaev_viro", "_href": "c/turaev_viro"}, "c_levin_wen": {"name": "Levin-Wen model code", "description": "Also called a string-net model code. Stub.", "protection": "Error-correcting properties established in Ref. .", "realizations": "", "notes": "", "feature_decoders": "Syndrome measurement circuits analyzed in Ref. .", "parent_detail": "\n\nWhen treated as ground states of the Levin-Wen model, the code states realize doubled topological order that is associated with a tensor category .", "cousin_detail": "Levin-Wen model reduces to the quantum-double model for group categories.", "_type": "ecc", "_page_id": "c_levin_wen", "_href": "c/levin_wen"}, "c_category_quantum": {"name": "Category-based quantum code", "description": "Encodes a finite-dimensional logical Hilbert space into a physical Hilbert space associated with a category. Often associated with a particular topological quantum field theory (TQFT), as the data of such theories is described by a category.", "protection": "", "realizations": "", "notes": "", "parent_detail": "", "cousin_detail": "Category-based codes typically exhibit topological order associated with the categories used to construct them.", "_type": "ecc", "_page_id": "c_category_quantum", "_href": "c/category_quantum"}}